/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgedToken, BridgedTokenInterface } from "../BridgedToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611187806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461023d578063a457c2d714610245578063a9059cbb14610258578063dd62ed3e1461026b578063f2fde38b1461027e57600080fd5b806370a08231146101de578063715018a61461020757806379cc67901461020f5780638da5cb5b1461022257600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857806342966c68146101cb57600080fd5b806306fdde031461011b578063095ea7b3146101395780631624f6c61461015c57806318160ddd14610171575b600080fd5b610123610291565b6040516101309190610da2565b60405180910390f35b61014c610147366004610e0e565b610323565b6040519015158152602001610130565b61016f61016a366004610edb565b61033b565b005b6035545b604051908152602001610130565b61014c610191366004610f59565b6103bd565b60405160128152602001610130565b61014c6101b3366004610e0e565b6103e1565b61016f6101c6366004610e0e565b610403565b61016f6101d9366004610f95565b610444565b6101756101ec366004610fae565b6001600160a01b031660009081526033602052604090205490565b61016f610451565b61016f61021d366004610e0e565b610487565b6097546040516001600160a01b039091168152602001610130565b61012361049c565b61014c610253366004610e0e565b6104ab565b61014c610266366004610e0e565b610526565b610175610279366004610fd0565b610534565b61016f61028c366004610fae565b61055f565b6060603680546102a090611003565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90611003565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b5050505050905090565b6000336103318185856105f7565b5060019392505050565b6000610347600161071c565b9050801561035f576000805461ff0019166101001790555b61036984846107a9565b6103716107da565b80156103b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000336103cb858285610801565b6103d6858585610875565b506001949350505050565b6000336103318185856103f48383610534565b6103fe9190611054565b6105f7565b6097546001600160a01b031633146104365760405162461bcd60e51b815260040161042d9061106c565b60405180910390fd5b6104408282610a43565b5050565b61044e3382610b22565b50565b6097546001600160a01b0316331461047b5760405162461bcd60e51b815260040161042d9061106c565b6104856000610c6d565b565b610492823383610801565b6104408282610b22565b6060603780546102a090611003565b600033816104b98286610534565b9050838110156105195760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042d565b6103d682868684036105f7565b600033610331818585610875565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6097546001600160a01b031633146105895760405162461bcd60e51b815260040161042d9061106c565b6001600160a01b0381166105ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042d565b61044e81610c6d565b6001600160a01b0383166106595760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042d565b6001600160a01b0382166106ba5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042d565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008054610100900460ff1615610763578160ff16600114801561073f5750303b155b61075b5760405162461bcd60e51b815260040161042d906110a1565b506000919050565b60005460ff80841691161061078a5760405162461bcd60e51b815260040161042d906110a1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166107d05760405162461bcd60e51b815260040161042d906110ef565b6104408282610cbf565b600054610100900460ff166104855760405162461bcd60e51b815260040161042d906110ef565b600061080d8484610534565b905060001981146103b757818110156108685760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161042d565b6103b784848484036105f7565b6001600160a01b0383166108d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042d565b6001600160a01b03821661093b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042d565b6001600160a01b038316600090815260336020526040902054818110156109b35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042d565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906109ea908490611054565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3691815260200190565b60405180910390a36103b7565b6001600160a01b038216610a995760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042d565b8060356000828254610aab9190611054565b90915550506001600160a01b03821660009081526033602052604081208054839290610ad8908490611054565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042d565b6001600160a01b03821660009081526033602052604090205481811015610bf65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042d565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610c2590849061113a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161070f565b505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ce65760405162461bcd60e51b815260040161042d906110ef565b8151610cf9906036906020850190610d09565b508051610c689060379060208401905b828054610d1590611003565b90600052602060002090601f016020900481019282610d375760008555610d7d565b82601f10610d5057805160ff1916838001178555610d7d565b82800160010185558215610d7d579182015b82811115610d7d578251825591602001919060010190610d62565b50610d89929150610d8d565b5090565b5b80821115610d895760008155600101610d8e565b600060208083528351808285015260005b81811015610dcf57858101830151858201604001528201610db3565b81811115610de1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107a457600080fd5b60008060408385031215610e2157600080fd5b610e2a83610df7565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e5f57600080fd5b813567ffffffffffffffff80821115610e7a57610e7a610e38565b604051601f8301601f19908116603f01168101908282118183101715610ea257610ea2610e38565b81604052838152866020858801011115610ebb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610ef057600080fd5b833567ffffffffffffffff80821115610f0857600080fd5b610f1487838801610e4e565b94506020860135915080821115610f2a57600080fd5b50610f3786828701610e4e565b925050604084013560ff81168114610f4e57600080fd5b809150509250925092565b600080600060608486031215610f6e57600080fd5b610f7784610df7565b9250610f8560208501610df7565b9150604084013590509250925092565b600060208284031215610fa757600080fd5b5035919050565b600060208284031215610fc057600080fd5b610fc982610df7565b9392505050565b60008060408385031215610fe357600080fd5b610fec83610df7565b9150610ffa60208401610df7565b90509250929050565b600181811c9082168061101757607f821691505b6020821081141561103857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110675761106761103e565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561114c5761114c61103e565b50039056fea26469706673582212204876c178a59847c0a2f91832539f910445d9b100e131bcff8637efd66032644964736f6c63430008090033";

export class BridgedToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgedToken> {
    return super.deploy(overrides || {}) as Promise<BridgedToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgedToken {
    return super.attach(address) as BridgedToken;
  }
  connect(signer: Signer): BridgedToken__factory {
    return super.connect(signer) as BridgedToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgedTokenInterface {
    return new utils.Interface(_abi) as BridgedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgedToken {
    return new Contract(address, _abi, signerOrProvider) as BridgedToken;
  }
}
