/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MMR, MMRInterface } from "../MMR";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getChildren",
    outputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
    ],
    name: "getLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
    ],
    name: "getPeakIndexes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "peakIndexes",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
    ],
    name: "hashBranch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "hashLeaf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "heightAt",
    outputs: [
      {
        internalType: "uint8",
        name: "height",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "peaks",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "siblings",
        type: "bytes32[]",
      },
    ],
    name: "inclusionProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isLeaf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "mountainHeight",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
    ],
    name: "numOfPeaks",
    outputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "peaks",
        type: "bytes32[]",
      },
    ],
    name: "peakBagging",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "bytes32[255]",
        name: "peakMap",
        type: "bytes32[255]",
      },
    ],
    name: "peakMapToPeaks",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "peaks",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "bytes32[255]",
        name: "prevPeakMap",
        type: "bytes32[255]",
      },
      {
        internalType: "bytes32",
        name: "itemHash",
        type: "bytes32",
      },
    ],
    name: "peakUpdate",
    outputs: [
      {
        internalType: "bytes32[255]",
        name: "nextPeakMap",
        type: "bytes32[255]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "peaks",
        type: "bytes32[]",
      },
    ],
    name: "peaksToPeakMap",
    outputs: [
      {
        internalType: "bytes32[255]",
        name: "peakMap",
        type: "bytes32[255]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "peaks",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "itemHashes",
        type: "bytes32[]",
      },
    ],
    name: "rollUp",
    outputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61202661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101985760003560e01c8063858aaa61116100e8578063cad4b817116100a1578063e6334ede1161007b578063e6334ede146103e8578063ed9f51b314610408578063f38b75821461041b578063f6fd88001461042e57600080fd5b8063cad4b8171461039f578063cce3c13b146103b2578063da556f92146103c557600080fd5b8063858aaa611461031757806391b419ac14610337578063997db80414610357578063a248cd4f1461037a578063c365c8dd1461023d578063c522e7bc1461038d57600080fd5b8063452a3a0e1161015557806367e8f90c1161012f57806367e8f90c146102be57806378317ef4146102d15780637a87c5bd146102e457806383e24c881461030457600080fd5b8063452a3a0e1461026157806349ae8dc3146102745780635970e6ac1461029c57600080fd5b8063023c23db1461019d57806324c14439146101c357806326cf02ae146101d85780632d129442146101f85780632f2e2ea71461021d578063317027311461023d575b600080fd5b6101b06101ab3660046118f7565b610441565b6040519081526020015b60405180910390f35b6101b06101d13660046118f7565b6001015490565b6101eb6101e63660046119c3565b610460565b6040516101ba91906119fb565b61020b6102063660046118f7565b6105ce565b60405160ff90911681526020016101ba565b61023061022b3660046118f7565b610610565b6040516101ba9190611a24565b6101b061024b366004611a68565b6000908152600391909101602052604090205490565b6101b061026f366004611a68565b610734565b6102876102823660046118f7565b610767565b604080519283526020830191909152016101ba565b8180156102a857600080fd5b506102bc6102b7366004611a68565b6107e4565b005b61020b6102cc3660046118f7565b61080f565b6101eb6102df366004611afe565b610878565b8180156102f057600080fd5b506102bc6102ff366004611a68565b610977565b6101b06103123660046118f7565b610a5a565b81801561032357600080fd5b506102bc610332366004611a68565b610a91565b61034a6103453660046118f7565b610b93565b6040516101ba9190611b7f565b61036a610365366004611c01565b610c55565b60405190151581526020016101ba565b6101b0610388366004611ca4565b611056565b6101b061039b3660046118f7565b5490565b6101b06103ad366004611a68565b61112b565b61036a6103c03660046118f7565b611147565b6103d86103d3366004611a68565b61115f565b6040516101ba9493929190611d1a565b8180156103f457600080fd5b506102bc610403366004611d4b565b6113f8565b6101b0610416366004611afe565b611590565b6101b06104293660046118f7565b611626565b61034a61043c366004611d87565b61165f565b600061044c82611626565b61045a90600184901b611dcb565b92915050565b61046861183f565b6000610475856001611de2565b9050600061048282610a5a565b90508360008080808060015b60ff81116105be576104a18160ff611dcb565b955081156104dc578b8660ff81106104bb576104bb611dfa565b60200201518a8760ff81106104d2576104d2611dfa565b60200201526105ac565b6104e7600182611dcb565b6001901b94508c851615159350888516151592508761050581611e10565b98505083156105315761052e8c8760ff811061052357610523611dfa565b60200201518861112b565b96505b8215610592578315610570578b8660ff811061054f5761054f611dfa565b60200201518a8760ff811061056657610566611dfa565b6020020152610589565b868a8760ff811061058357610583611dfa565b60200201525b600191506105ac565b60008a8760ff81106105a6576105a6611dfa565b60200201525b806105b681611e10565b91505061048e565b5050505050505050509392505050565b600060015b6105e060ff821684611de2565b600160ff83161b116105fe57806105f681611e2b565b9150506105d3565b610609600182611e4b565b9392505050565b606061061b82611626565b6001600160401b0381111561063257610632611910565b60405190808252806020026020018201604052801561065b578160200160208202803683370190505b50905060008060ff5b80156106d757610675600182611dcb565b6001901b8516156106c557600161068e81831b84611de2565b6106989190611dcb565b91508184846106a681611e10565b9550815181106106b8576106b8611dfa565b6020026020010181815250505b806106cf81611e6e565b915050610664565b508251821461072d5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206269742063616c63756c6174696f6e00000000000000000060448201526064015b60405180910390fd5b5050919050565b60008160405160200161074991815260200190565b60405160208183030381529060405280519060200120905092915050565b60008060016107758461080f565b61077f9190611e4b565b60ff166001901b836107919190611dcb565b915061079e600184611dcb565b9050808214156107df5760405162461bcd60e51b815260206004820152600c60248201526b139bdd0818481c185c995b9d60a21b6044820152606401610724565b915091565b6001808301546107f391611de2565b6001830181905560009081526003909201602052604090912055565b600081815b8082111561085c5761082d600160ff851681901b611dcb565b6108379083611dcb565b9150610842826105ce565b9250610855600160ff851681901b611dcb565b9050610814565b6108668282611dcb565b6108709084611e4b565b949350505050565b61088061183f565b8151600090819060015b60ff81116109255761089d8160ff611dcb565b93506108aa600182611dcb565b6001901b9250868316156108f957856108c283611e6e565b925082815181106108d5576108d5611dfa565b6020026020010151858560ff81106108ef576108ef611dfa565b6020020152610913565b6000858560ff811061090d5761090d611dfa565b60200201525b8061091d81611e10565b91505061088a565b50801561096e5760405162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f66207065616b7360481b6044820152606401610724565b50505092915050565b60028201819055600061098982610610565b90506109988360020154610441565b600184015580516000906001600160401b038111156109b9576109b9611910565b6040519080825280602002602001820160405280156109e2578160200160208202803683370190505b50905060005b8251811015610a4357610a1485848381518110610a0757610a07611dfa565b6020026020010151611782565b828281518110610a2657610a26611dfa565b602090810291909101015280610a3b81611e10565b9150506109e8565b50610a52846002015482611590565b909355505050565b6000610a67600283611e85565b60011415610a785761045a82610441565b610a866101ab600184611dcb565b61045a906001611de2565b8082600301600084600101546001610aa99190611de2565b8152602001908152602001600020819055506001826002016000828254610ad09190611de2565b925050819055506000610ae68360020154610610565b9050610af58360020154610441565b600184015580516000906001600160401b03811115610b1657610b16611910565b604051908082528060200260200182016040528015610b3f578160200160208202803683370190505b50905060005b8251811015610a4357610b6485848381518110610a0757610a07611dfa565b828281518110610b7657610b76611dfa565b602090810291909101015280610b8b81611e10565b915050610b45565b60606000610ba48360020154610610565b905080516001600160401b03811115610bbf57610bbf611910565b604051908082528060200260200182016040528015610be8578160200160208202803683370190505b50915060005b815181101561072d57836003016000838381518110610c0f57610c0f611dfa565b6020026020010151815260200190815260200160002054838281518110610c3857610c38611dfa565b602090810291909101015280610c4d81611e10565b915050610bee565b602083015160009081610c6788610441565b905086811015610cb15760405162461bcd60e51b8152602060048201526015602482015274496e646578206973206f7574206f662072616e676560581b6044820152606401610724565b84604051602001610cc29190611ea7565b604051602081830303815290604052805190602001208914610d265760405162461bcd60e51b815260206004820181905260248201527f496e76616c696420726f6f7420686173682066726f6d20746865207065616b736044820152606401610724565b6000806000610d348b610610565b905060005b8151811015610dc9578a6001838381518110610d5757610d57611dfa565b6020026020010151610d699190611dcb565b10610db757888181518110610d8057610d80611dfa565b602002602001015192506001828281518110610d9e57610d9e611dfa565b6020026020010151610db09190611dcb565b9350610dc9565b80610dc181611e10565b915050610d39565b5081610e0d5760405162461bcd60e51b815260206004820152601360248201527215185c99d95d081a5cc81b9bdd08199bdd5b99606a1b6044820152606401610724565b600087516001610e1d9190611de2565b6001600160401b03811115610e3457610e34611910565b604051908082528060200260200182016040528015610e5d578160200160208202803683370190505b50905060008060008a516001610e739190611edd565b90505b60ff811615610eff578684610e8a83611f02565b92508260ff1681518110610ea057610ea0611dfa565b6020026020010181815250508d871415610eb957610eff565b610ec7610282886001611de2565b9093509150610ed7600184611dcb565b8e11610eed57610ee8600184611dcb565b610ef8565b610ef8600183611dcb565b9650610e76565b60005b84518260ff161015610ff657848260ff1681518110610f2357610f23611dfa565b602002602001015197508160ff1660001415610f40575088610fe4565b84610f4c600184611e4b565b60ff1681518110610f5f57610f5f611dfa565b6020026020010151600189610f749190611dcb565b1415610fb157610faa8c610f89600185611e4b565b60ff1681518110610f9c57610f9c611dfa565b60200260200101518261112b565b9050610fe4565b610fe1818d610fc1600186611e4b565b60ff1681518110610fd457610fd4611dfa565b602002602001015161112b565b90505b81610fee81611e2b565b925050610f02565b86811461103e5760405162461bcd60e51b815260206004820152601660248201527512185cda1959081c19585ac81a5cc81a5b9d985b1a5960521b6044820152606401610724565b60019a50505050505050505050509695505050505050565b60006110628484611590565b85146110b05760405162461bcd60e51b815260206004820181905260248201527f496e76616c696420726f6f7420686173682066726f6d20746865207065616b736044820152606401610724565b8360006110bd8286610878565b905060005b8451811015611111576110ef83838784815181106110e2576110e2611dfa565b6020026020010151610460565b9150826110fb81611e10565b935050808061110990611e10565b9150506110c2565b5061112082610416848461165f565b979650505050505050565b6040805160208101849052908101829052600090606001610749565b60006111528261080f565b60ff166001149050919050565b600080606080856001015485106111a75760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b6044820152606401610724565b6111b085611147565b6111e95760405162461bcd60e51b815260206004820152600a6024820152692737ba1030903632b0b360b11b6044820152606401610724565b855460028701549094509250600061120084610610565b905080516001600160401b0381111561121b5761121b611910565b604051908082528060200260200182016040528015611244578160200160208202803683370190505b5092506000805b82518110156112fc5788600301600084838151811061126c5761126c611dfa565b602002602001015181526020019081526020016000205485828151811061129557611295611dfa565b602002602001018181525050878382815181106112b4576112b4611dfa565b6020026020010151101580156112c8575081155b156112ea578281815181106112df576112df611dfa565b602002602001015191505b806112f481611e10565b91505061124b565b50600080600061130b8461080f565b9050611318600182611e4b565b60ff166001600160401b0381111561133257611332611910565b60405190808252806020026020018201604052801561135b578160200160208202803683370190505b5095505b8984146113ea578061137081611f02565b91505061137c84610767565b9093509150828a111561138f5781611391565b825b93508a6003016000848c11156113a757846113a9565b835b815260200190815260200160002054866001836113c69190611e4b565b60ff16815181106113d9576113d9611dfa565b60200260200101818152505061135f565b505050505092959194509250565b600081805190602001209050808360040160008381526020019081526020016000206040516114279190611f54565b604051809103902014611457576000818152600484016020908152604090912083516114559285019061185e565b505b60006114738460010154600161146d9190611de2565b83610734565b9050808460030160008660010154600161148d9190611de2565b81526020019081526020016000208190555060018460020160008282546114b49190611de2565b9250508190555060006114ca8560020154610610565b90506114d98560020154610441565b600186015580516000906001600160401b038111156114fa576114fa611910565b604051908082528060200260200182016040528015611523578160200160208202803683370190505b50905060005b82518110156115775761154887848381518110610a0757610a07611dfa565b82828151811061155a5761155a611dfa565b60209081029190910101528061156f81611e10565b915050611529565b50611586866002015482611590565b9095555050505050565b60008061159c84610441565b905082516115a985611626565b146115f65760405162461bcd60e51b815260206004820181905260248201527f526563656976656420696e76616c6964206e756d626572206f66207065616b736044820152606401610724565b826040516020016116079190611ea7565b6040516020818303038152906040528051906020012091505092915050565b6000815b80156116595761163b600282611e85565b60011415611651578161164d81611e10565b9250505b60011c61162a565b50919050565b6060600061166c84611626565b9050806001600160401b0381111561168657611686611910565b6040519080825280602002602001820160405280156116af578160200160208202803683370190505b5091506000805b60ff811015611730576000858260ff81106116d3576116d3611dfa565b60200201511461171e57848160ff81106116ef576116ef611dfa565b602002015184836116ff81611e10565b94508151811061171157611711611dfa565b6020026020010181815250505b8061172881611e10565b9150506116b6565b5081811461177a5760405162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f66207065616b7360481b6044820152606401610724565b505092915050565b600082600101548211156117c75760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b6044820152606401610724565b6000828152600384016020526040902054611828576000806117e884610767565b9150915060006117f88684611782565b905060006118068784611782565b9050611812828261112b565b6000878152600389016020526040902055505050505b506000908152600391909101602052604090205490565b60405180611fe0016040528060ff906020820280368337509192915050565b82805461186a90611f1f565b90600052602060002090601f01602090048101928261188c57600085556118d2565b82601f106118a557805160ff19168380011785556118d2565b828001600101855582156118d2579182015b828111156118d25782518255916020019190600101906118b7565b506118de9291506118e2565b5090565b5b808211156118de57600081556001016118e3565b60006020828403121561190957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561194e5761194e611910565b604052919050565b600082601f83011261196757600080fd5b604051611fe08082018281106001600160401b038211171561198b5761198b611910565b6040528301818582111561199e57600080fd5b845b828110156119b85780358252602091820191016119a0565b509195945050505050565b600080600061202084860312156119d957600080fd5b833592506119ea8560208601611956565b915061200084013590509250925092565b611fe08101818360005b60ff81101561096e578151835260209283019290910190600101611a05565b6020808252825182820181905260009190848201906040850190845b81811015611a5c57835183529284019291840191600101611a40565b50909695505050505050565b60008060408385031215611a7b57600080fd5b50508035926020909101359150565b600082601f830112611a9b57600080fd5b813560206001600160401b03821115611ab657611ab6611910565b8160051b611ac5828201611926565b9283528481018201928281019087851115611adf57600080fd5b83870192505b8483101561112057823582529183019190830190611ae5565b60008060408385031215611b1157600080fd5b8235915060208301356001600160401b03811115611b2e57600080fd5b611b3a85828601611a8a565b9150509250929050565b600081518084526020808501945080840160005b83811015611b7457815187529582019590820190600101611b58565b509495945050505050565b6020815260006106096020830184611b44565b600082601f830112611ba357600080fd5b81356001600160401b03811115611bbc57611bbc611910565b611bcf601f8201601f1916602001611926565b818152846020838601011115611be457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215611c1a57600080fd5b86359550602087013594506040870135935060608701356001600160401b0380821115611c4657600080fd5b611c528a838b01611b92565b94506080890135915080821115611c6857600080fd5b611c748a838b01611a8a565b935060a0890135915080821115611c8a57600080fd5b50611c9789828a01611a8a565b9150509295509295509295565b60008060008060808587031215611cba57600080fd5b843593506020850135925060408501356001600160401b0380821115611cdf57600080fd5b611ceb88838901611a8a565b93506060870135915080821115611d0157600080fd5b50611d0e87828801611a8a565b91505092959194509250565b848152836020820152608060408201526000611d396080830185611b44565b82810360608401526111208185611b44565b60008060408385031215611d5e57600080fd5b8235915060208301356001600160401b03811115611d7b57600080fd5b611b3a85828601611b92565b6000806120008385031215611d9b57600080fd5b82359150611dac8460208501611956565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ddd57611ddd611db5565b500390565b60008219821115611df557611df5611db5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611e2457611e24611db5565b5060010190565b600060ff821660ff811415611e4257611e42611db5565b60010192915050565b600060ff821660ff841680821015611e6557611e65611db5565b90039392505050565b600081611e7d57611e7d611db5565b506000190190565b600082611ea257634e487b7160e01b600052601260045260246000fd5b500690565b815160009082906020808601845b83811015611ed157815185529382019390820190600101611eb5565b50929695505050505050565b600060ff821660ff84168060ff03821115611efa57611efa611db5565b019392505050565b600060ff821680611f1557611f15611db5565b6000190192915050565b600181811c90821680611f3357607f821691505b6020821081141561165957634e487b7160e01b600052602260045260246000fd5b600080835481600182811c915080831680611f7057607f831692505b6020808410821415611f9057634e487b7160e01b86526022600452602486fd5b818015611fa45760018114611fb557611fe2565b60ff19861689528489019650611fe2565b60008a81526020902060005b86811015611fda5781548b820152908501908301611fc1565b505084890196505b50949897505050505050505056fea2646970667358221220fd0ce5cde35a5c9d61de40eeec03ab2dc955652a98eea3d0fa6ff0f5bf0a70e764736f6c63430008090033";

export class MMR__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MMR> {
    return super.deploy(overrides || {}) as Promise<MMR>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MMR {
    return super.attach(address) as MMR;
  }
  connect(signer: Signer): MMR__factory {
    return super.connect(signer) as MMR__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MMRInterface {
    return new utils.Interface(_abi) as MMRInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MMR {
    return new Contract(address, _abi, signerOrProvider) as MMR;
  }
}
