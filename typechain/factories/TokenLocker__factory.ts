/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAck",
        type: "address",
      },
    ],
    name: "TokenMapAck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenMapReq",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMapped",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMappedInv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RxTokens",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMappedInv",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TxTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "thisSideToken",
        type: "address",
      },
    ],
    name: "issueTokenMapReq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "otherSideBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BridgedToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638487b9cf116100715780638487b9cf14610150578063ae24fbb414610180578063cd06c3a1146101b0578063d650d3f7146101cf578063e05bdaf7146101ff578063e71575e81461022f576100a9565b806335c6814d146100ae5780634ae83c8e146100de5780634d2be8e5146100fa57806359508f8f146101185780637750c9f014610134575b600080fd5b6100c860048036038101906100c3919061113c565b61025f565b6040516100d591906113c1565b60405180910390f35b6100f860048036038101906100f39190611083565b61029e565b005b61010261054a565b60405161010f9190611346565b60405180910390f35b610132600480360381019061012d9190611034565b610570565b005b61014e600480360381019061014991906110ac565b610788565b005b61016a60048036038101906101659190610fe2565b610a94565b6040516101779190611346565b60405180910390f35b61019a6004803603810190610195919061113c565b610ac7565b6040516101a791906113dc565b60405180910390f35b6101b8610b06565b6040516101c6929190611539565b60405180910390f35b6101e960048036038101906101e49190610fe2565b610b1d565b6040516101f691906113dc565b60405180910390f35b61021960048036038101906102149190610fe2565b610b50565b60405161022691906113c1565b60405180910390f35b61024960048036038101906102449190610fe2565b610b83565b6040516102569190611346565b60405180910390f35b6001818154811061026f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390611490565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b757600080fd5b505afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef919061118e565b60ff168273ffffffffffffffffffffffffffffffffffffffff167fc13b93ab57586894396c38a46a06c88056fdbb23c7c595f8d08274f9a8593a428373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561047057600080fd5b505afa158015610484573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ad91906110fb565b8473ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156104f357600080fd5b505afa158015610507573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053091906110fb565b60405161053e929190611419565b60405180910390a35050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d7906114b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690611450565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b81526004016106ea929190611398565b600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3dd1df88dc92e2788892542d81f999d720a44b4c127065d45c128f4f59fdc373838560405161077b929190611510565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef906114b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90611450565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109029190611346565b60206040518083038186803b15801561091a57600080fd5b505afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190611165565b90506109813330848773ffffffffffffffffffffffffffffffffffffffff16610bb6909392919063ffffffff16565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109bc9190611346565b60206040518083038186803b1580156109d457600080fd5b505afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190611165565b90506000610a238383610c3f90919063ffffffff16565b90503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f4c6ab40ee4cfa212a441d32ee2897945b4a52461284f9369e23fdf8faa6cdd698388604051610a84929190611510565b60405180910390a3505050505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110610ad757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080549050600180549050915091509091565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c39846323b872dd60e01b858585604051602401610bd793929190611361565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c55565b50505050565b60008183610c4d91906115ea565b905092915050565b6000610cb7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d1c9092919063ffffffff16565b9050600081511115610d175780806020019051810190610cd7919061100b565b610d16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0d906114f0565b60405180910390fd5b5b505050565b6060610d2b8484600085610d34565b90509392505050565b606082471015610d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7090611470565b60405180910390fd5b610d8285610e48565b610dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db8906114d0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610dea919061132f565b60006040518083038185875af1925050503d8060008114610e27576040519150601f19603f3d011682016040523d82523d6000602084013e610e2c565b606091505b5091509150610e3c828286610e6b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610e7b57829050610ecb565b600083511115610e8e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec291906113f7565b60405180910390fd5b9392505050565b6000610ee5610ee084611587565b611562565b905082815260208101848484011115610efd57600080fd5b610f088482856116f1565b509392505050565b600081359050610f1f81611906565b92915050565b600081519050610f348161191d565b92915050565b600081359050610f4981611934565b92915050565b600081359050610f5e8161194b565b92915050565b600081359050610f7381611962565b92915050565b600082601f830112610f8a57600080fd5b8151610f9a848260208601610ed2565b91505092915050565b600081359050610fb281611979565b92915050565b600081519050610fc781611979565b92915050565b600081519050610fdc81611990565b92915050565b600060208284031215610ff457600080fd5b600061100284828501610f10565b91505092915050565b60006020828403121561101d57600080fd5b600061102b84828501610f25565b91505092915050565b60008060006060848603121561104957600080fd5b600061105786828701610f3a565b935050602061106886828701610f10565b925050604061107986828701610fa3565b9150509250925092565b60006020828403121561109557600080fd5b60006110a384828501610f4f565b91505092915050565b6000806000606084860312156110c157600080fd5b60006110cf86828701610f64565b93505060206110e086828701610f10565b92505060406110f186828701610fa3565b9150509250925092565b60006020828403121561110d57600080fd5b600082015167ffffffffffffffff81111561112757600080fd5b61113384828501610f79565b91505092915050565b60006020828403121561114e57600080fd5b600061115c84828501610fa3565b91505092915050565b60006020828403121561117757600080fd5b600061118584828501610fb8565b91505092915050565b6000602082840312156111a057600080fd5b60006111ae84828501610fcd565b91505092915050565b6111c08161161e565b82525050565b60006111d1826115b8565b6111db81856115ce565b93506111eb8185602086016116f1565b80840191505092915050565b611200816116a9565b82525050565b61120f816116cd565b82525050565b6000611220826115c3565b61122a81856115d9565b935061123a8185602086016116f1565b611243816117b3565b840191505092915050565b600061125b6015836115d9565b9150611266826117c4565b602082019050919050565b600061127e6026836115d9565b9150611289826117ed565b604082019050919050565b60006112a16017836115d9565b91506112ac8261183c565b602082019050919050565b60006112c4601b836115d9565b91506112cf82611865565b602082019050919050565b60006112e7601d836115d9565b91506112f28261188e565b602082019050919050565b600061130a602a836115d9565b9150611315826118b7565b604082019050919050565b61132981611692565b82525050565b600061133b82846111c6565b915081905092915050565b600060208201905061135b60008301846111b7565b92915050565b600060608201905061137660008301866111b7565b61138360208301856111b7565b6113906040830184611320565b949350505050565b60006040820190506113ad60008301856111b7565b6113ba6020830184611320565b9392505050565b60006020820190506113d660008301846111f7565b92915050565b60006020820190506113f16000830184611206565b92915050565b600060208201905081810360008301526114118184611215565b905092915050565b600060408201905081810360008301526114338185611215565b905081810360208301526114478184611215565b90509392505050565b600060208201905081810360008301526114698161124e565b9050919050565b6000602082019050818103600083015261148981611271565b9050919050565b600060208201905081810360008301526114a981611294565b9050919050565b600060208201905081810360008301526114c9816112b7565b9050919050565b600060208201905081810360008301526114e9816112da565b9050919050565b60006020820190508181036000830152611509816112fd565b9050919050565b60006040820190506115256000830185611320565b61153260208301846111b7565b9392505050565b600060408201905061154e6000830185611320565b61155b6020830184611320565b9392505050565b600061156c61157d565b90506115788282611724565b919050565b6000604051905090565b600067ffffffffffffffff8211156115a2576115a1611784565b5b6115ab826117b3565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115f582611692565b915061160083611692565b92508282101561161357611612611755565b5b828203905092915050565b600061162982611672565b9050919050565b60008115159050919050565b60006116478261161e565b9050919050565b60006116598261161e565b9050919050565b600061166b8261161e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006116b4826116bb565b9050919050565b60006116c682611672565b9050919050565b60006116d8826116df565b9050919050565b60006116ea82611672565b9050919050565b60005b8381101561170f5780820151818401526020810190506116f4565b8381111561171e576000848401525b50505050565b61172d826117b3565b810181811067ffffffffffffffff8211171561174c5761174b611784565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f62726964676520646f6573206e6f742065786973740000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e20697320616c7265616479206d6170706564000000000000000000600082015250565b7f726563697069656e742069732061207a65726f20616464726573730000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61190f8161161e565b811461191a57600080fd5b50565b61192681611630565b811461193157600080fd5b50565b61193d8161163c565b811461194857600080fd5b50565b6119548161164e565b811461195f57600080fd5b50565b61196b81611660565b811461197657600080fd5b50565b61198281611692565b811461198d57600080fd5b50565b6119998161169c565b81146119a457600080fd5b5056fea264697066735822122034b84e27ec0485d0ac77c78fb484aab5db5307c3a4bbb71584256a9ffbc1e64464736f6c63430008040033";

export class TokenLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(overrides || {}) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
