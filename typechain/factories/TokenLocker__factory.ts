/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAck",
        type: "address",
      },
    ],
    name: "TokenMapAck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenMapReq",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMapped",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMappedInv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RxTokens",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMappedInv",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TxTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "thisSideToken",
        type: "address",
      },
    ],
    name: "issueTokenMapReq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "otherSideBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BridgedToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638487b9cf116100715780638487b9cf14610150578063ae24fbb414610180578063cd06c3a1146101b0578063d650d3f7146101cf578063e05bdaf7146101ff578063e71575e81461022f576100a9565b806335c6814d146100ae5780634ae83c8e146100de5780634d2be8e5146100fa57806359508f8f146101185780637750c9f014610134575b600080fd5b6100c860048036038101906100c391906116b2565b61025f565b6040516100d5919061175e565b60405180910390f35b6100f860048036038101906100f391906117c9565b61029e565b005b6101026106d6565b60405161010f9190611805565b60405180910390f35b610132600480360381019061012d919061188a565b6106fc565b005b61014e6004803603810190610149919061191b565b610b50565b005b61016a6004803603810190610165919061196e565b6111a0565b6040516101779190611805565b60405180910390f35b61019a600480360381019061019591906116b2565b6111d3565b6040516101a791906119bc565b60405180910390f35b6101b8611212565b6040516101c69291906119e6565b60405180910390f35b6101e960048036038101906101e4919061196e565b6112ad565b6040516101f691906119bc565b60405180910390f35b6102196004803603810190610214919061196e565b6112e0565b604051610226919061175e565b60405180910390f35b6102496004803603810190610244919061196e565b611313565b6040516102569190611805565b60405180910390f35b6001818154811061026f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102ca7f4d329c047558e847d83c41f7b16f931378338a11c28d24a8f888cd8a91ad1fef60001b611346565b6102f67f1520fb089c4225b793fe99b601bdb5b11fdcbf4f32836fc5246d3ce88ee5e0e560001b611346565b6103227fe346345b61ed97afc4dc36f6eee27fd4ed90cd603cb9b19fa4fa8d335b400ac660001b611346565b61034e7f36b63849b57e620be1f5428c13b7e17ae4b5027249de99297adc256872307fd460001b611346565b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611a6c565b60405180910390fd5b6104487fa1b99a76233f65fa9adcfb1b1d8ca212c6ba5b072deb46d47fc81c12ce7e7cab60001b611346565b6104747f51e0beeed9a15026c2f06695fed42049c07b0f525ac417caf918810ad9eb123f60001b611346565b6104a07f594e046a257f5b5bde69e9f70cb8214845614a9a2cdc3153d6c8ab8082ccaf2160001b611346565b60008190506104d17f978e9d65af7d344f3f69524e7d7da4bc845314dee53b9c57ecebfe866b15b09e60001b611346565b6104fd7fc3063d8f91cf2fe8e4fe0d22905c93b616005e197e0821ecc18054bb5712292c60001b611346565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611ac5565b60ff168273ffffffffffffffffffffffffffffffffffffffff167fc13b93ab57586894396c38a46a06c88056fdbb23c7c595f8d08274f9a8593a428373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156105fc57600080fd5b505afa158015610610573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106399190611c5c565b8473ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561067f57600080fd5b505afa158015610693573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106bc9190611c5c565b6040516106ca929190611ce9565b60405180910390a35050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107287f5e70bc17a86d9fccab48522efe2ddeb3ae544e7a7b8517d20ce9fc1731c0469660001b611349565b6107547f63f3c368ab7f314c86576a4adc42a9b477348033a85b59e5cf53ef63c10841fc60001b611349565b6107807f3088939396e047ac75dc8a421145cc68faceeecf1881fc11130a410b22d1794f60001b611349565b6107ac7fdbcaef419dcf7085a601637499487f8b9c18bb69ab5de274aed443e10e19e7c360001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390611d6c565b60405180910390fd5b6108487f84dbbe76a654f8fffe2a1cf20865867b9918f5d84afacaa3baa3ca250a6aaf1c60001b611349565b6108747f97892ca84ee3d072469eebbfeed241efcee371acee32be4ef7f35e5b5419f1d660001b611349565b6108a07f9bab5b0d4ccce545e6afa875eb8999db463f431cc97487e631ed394fb665c23360001b611349565b6108cc7f21b7738c9c897af9056e6451abf5a398334245befa470a1a61329f6111f4455a60001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290611dd8565b60405180910390fd5b6109c77fa1e049eb76224ab0ac42048b8c48f40559d744bac300d0ac3759ea95adef926560001b611349565b6109f37fdea738859b1ba17f0bcc037f83f44b4a4633f82bbbe2dcc41e8fefcfa4aee8cd60001b611349565b610a1f7fed402e51c834776f5e987093723a2f26f50b1372f0137d7f543f55ba009c562a60001b611349565b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401610a5a929190611df8565b600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b50505050610ab87f3c328971b531e1a15e9e6d65902e8c75670acf16b6fc40299f2cd62cd9e1fca960001b611349565b610ae47ff5459458c4c7453bed4e5b92bc59b0b78fc3c08fb9d12947dd1f07a1255cdc8560001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3dd1df88dc92e2788892542d81f999d720a44b4c127065d45c128f4f59fdc3738385604051610b43929190611e21565b60405180910390a3505050565b610b7c7f044bc1e460538de9b64647c17dc3a103b06e2f049329b8dd0e4c3f876b0c031c60001b611349565b610ba87fe6e5eaefc821a005047bc41dc7eb2bf65ff62264125377075858db7a6108511060001b611349565b610bd47f99970960980c1b03a9e7ce12f7ec09027b959cf8bf69dcdd6927d25e29991ac760001b611349565b610c007f07464266c9906416633f7a5e4fa4a4f376b9eb18957d845fd7d47a0f317f632e60001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790611d6c565b60405180910390fd5b610c9c7fc64b9638e5be9d8a1b45f4678e9380d694c81bac0f6f6597531238ccaee1cf0460001b611349565b610cc87f9c17f3348214f6d29c5e60b01d4f59ea05804bfd73ea7be48ff163be46d818b560001b611349565b610cf47f3aed3a1d2ee0cfa0c103856f2e3bb605af0adfe5d46ee984555bbd363089861560001b611349565b610d207f08d338c9441f039730452976ed83b2497927da771c64ee8d993c3f452750077a60001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610def576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de690611dd8565b60405180910390fd5b610e1b7f7b295c1d011084f4fc1a5744860e9d11e0622bd22908a7e1c973428da5e3ab4a60001b611349565b610e477fa2a3335bdaa6a4d24728f1fd2b632dcbbb7dc02026f21b1c8083c1b0d35471ec60001b611349565b610e737f13b4b345dc48fb6bfac6a49533a11f7a3873bc2d7e193d78c3f09eec4276212a60001b611349565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610eae9190611805565b60206040518083038186803b158015610ec657600080fd5b505afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611e5f565b9050610f2c7f0afb942e769e8f0cf4ceaf27fadfc9e2f69fb6ba5d2573c96f62f6dcdf3d9c4c60001b611349565b610f587f1dfa2b0f2858fbf822b554505feb1f622b7d44cd32bf9df04b4448782b611e3160001b611349565b610f853330848773ffffffffffffffffffffffffffffffffffffffff1661134c909392919063ffffffff16565b610fb17f7f893ab3326a3a0bb833ad22b1a77d24a5eb4266c816625192d16532ab7ebf4f60001b611349565b610fdd7f2f1a9eec0972fc4841fccb3a8814e6b0afaa15b1e284d8b0acbde07303419f6160001b611349565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110189190611805565b60206040518083038186803b15801561103057600080fd5b505afa158015611044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110689190611e5f565b90506110967f7d54ad776c4434f61d79fe0f76d93cc5a7f4fd8319755695b15e2cbeb2de8db760001b611349565b6110c27f7993a17e974ca90d63f276d31a208d545ac0bf152a8cbce185098b83909864b760001b611349565b60006110d783836113d590919063ffffffff16565b90506111057f65ff037c9663ec0d955311235b7e571f188cb52729b06a44843f817d8bb25a2d60001b611349565b6111317f23235fb02b7098832afd41ad1590b9487bb2b167c2048df3f727fe53dc2f793760001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f4c6ab40ee4cfa212a441d32ee2897945b4a52461284f9369e23fdf8faa6cdd698388604051611190929190611e21565b60405180910390a3505050505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106111e357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806112417f7d4b5a1a4b575b06b944f8b44f77f6fa6cd1c90208e71195b8c18e3fd3ae18b060001b611346565b61126d7f550e13ef54ebcdff3bc59829b668580f36a89382cd26070bfd73f6e6d32d857960001b611346565b6112997f55710692bc0f43b05a6ef1e64b4a7bc3c38e4b25df78178118a2983128066c9760001b611346565b600080549050600180549050915091509091565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6113cf846323b872dd60e01b85858560405160240161136d93929190611e8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113eb565b50505050565b600081836113e39190611ef2565b905092915050565b600061144d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114b29092919063ffffffff16565b90506000815111156114ad578080602001905181019061146d9190611f5e565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390611ffd565b60405180910390fd5b5b505050565b60606114c184846000856114ca565b90509392505050565b60608247101561150f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115069061208f565b60405180910390fd5b611518856115de565b611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e906120fb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516115809190612162565b60006040518083038185875af1925050503d80600081146115bd576040519150601f19603f3d011682016040523d82523d6000602084013e6115c2565b606091505b50915091506115d2828286611601565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561161157829050611661565b6000835111156116245782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116589190612179565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61168f8161167c565b811461169a57600080fd5b50565b6000813590506116ac81611686565b92915050565b6000602082840312156116c8576116c7611672565b5b60006116d68482850161169d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061172461171f61171a846116df565b6116ff565b6116df565b9050919050565b600061173682611709565b9050919050565b60006117488261172b565b9050919050565b6117588161173d565b82525050565b6000602082019050611773600083018461174f565b92915050565b6000611784826116df565b9050919050565b600061179682611779565b9050919050565b6117a68161178b565b81146117b157600080fd5b50565b6000813590506117c38161179d565b92915050565b6000602082840312156117df576117de611672565b5b60006117ed848285016117b4565b91505092915050565b6117ff81611779565b82525050565b600060208201905061181a60008301846117f6565b92915050565b600061182b82611779565b9050919050565b61183b81611820565b811461184657600080fd5b50565b60008135905061185881611832565b92915050565b61186781611779565b811461187257600080fd5b50565b6000813590506118848161185e565b92915050565b6000806000606084860312156118a3576118a2611672565b5b60006118b186828701611849565b93505060206118c286828701611875565b92505060406118d38682870161169d565b9150509250925092565b60006118e882611779565b9050919050565b6118f8816118dd565b811461190357600080fd5b50565b600081359050611915816118ef565b92915050565b60008060006060848603121561193457611933611672565b5b600061194286828701611906565b935050602061195386828701611875565b92505060406119648682870161169d565b9150509250925092565b60006020828403121561198457611983611672565b5b600061199284828501611875565b91505092915050565b60006119a68261172b565b9050919050565b6119b68161199b565b82525050565b60006020820190506119d160008301846119ad565b92915050565b6119e08161167c565b82525050565b60006040820190506119fb60008301856119d7565b611a0860208301846119d7565b9392505050565b600082825260208201905092915050565b7f746f6b656e20697320616c7265616479206d6170706564000000000000000000600082015250565b6000611a56601783611a0f565b9150611a6182611a20565b602082019050919050565b60006020820190508181036000830152611a8581611a49565b9050919050565b600060ff82169050919050565b611aa281611a8c565b8114611aad57600080fd5b50565b600081519050611abf81611a99565b92915050565b600060208284031215611adb57611ada611672565b5b6000611ae984828501611ab0565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4582611afc565b810181811067ffffffffffffffff82111715611b6457611b63611b0d565b5b80604052505050565b6000611b77611668565b9050611b838282611b3c565b919050565b600067ffffffffffffffff821115611ba357611ba2611b0d565b5b611bac82611afc565b9050602081019050919050565b60005b83811015611bd7578082015181840152602081019050611bbc565b83811115611be6576000848401525b50505050565b6000611bff611bfa84611b88565b611b6d565b905082815260208101848484011115611c1b57611c1a611af7565b5b611c26848285611bb9565b509392505050565b600082601f830112611c4357611c42611af2565b5b8151611c53848260208601611bec565b91505092915050565b600060208284031215611c7257611c71611672565b5b600082015167ffffffffffffffff811115611c9057611c8f611677565b5b611c9c84828501611c2e565b91505092915050565b600081519050919050565b6000611cbb82611ca5565b611cc58185611a0f565b9350611cd5818560208601611bb9565b611cde81611afc565b840191505092915050565b60006040820190508181036000830152611d038185611cb0565b90508181036020830152611d178184611cb0565b90509392505050565b7f726563697069656e742069732061207a65726f20616464726573730000000000600082015250565b6000611d56601b83611a0f565b9150611d6182611d20565b602082019050919050565b60006020820190508181036000830152611d8581611d49565b9050919050565b7f62726964676520646f6573206e6f742065786973740000000000000000000000600082015250565b6000611dc2601583611a0f565b9150611dcd82611d8c565b602082019050919050565b60006020820190508181036000830152611df181611db5565b9050919050565b6000604082019050611e0d60008301856117f6565b611e1a60208301846119d7565b9392505050565b6000604082019050611e3660008301856119d7565b611e4360208301846117f6565b9392505050565b600081519050611e5981611686565b92915050565b600060208284031215611e7557611e74611672565b5b6000611e8384828501611e4a565b91505092915050565b6000606082019050611ea160008301866117f6565b611eae60208301856117f6565b611ebb60408301846119d7565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611efd8261167c565b9150611f088361167c565b925082821015611f1b57611f1a611ec3565b5b828203905092915050565b60008115159050919050565b611f3b81611f26565b8114611f4657600080fd5b50565b600081519050611f5881611f32565b92915050565b600060208284031215611f7457611f73611672565b5b6000611f8284828501611f49565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fe7602a83611a0f565b9150611ff282611f8b565b604082019050919050565b6000602082019050818103600083015261201681611fda565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612079602683611a0f565b91506120848261201d565b604082019050919050565b600060208201905081810360008301526120a88161206c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006120e5601d83611a0f565b91506120f0826120af565b602082019050919050565b60006020820190508181036000830152612114816120d8565b9050919050565b600081519050919050565b600081905092915050565b600061213c8261211b565b6121468185612126565b9350612156818560208601611bb9565b80840191505092915050565b600061216e8284612131565b915081905092915050565b600060208201905081810360008301526121938184611cb0565b90509291505056fea26469706673582212206dfcd82039f39e340fbac8310a14d98842ebf5d2ee1bb2d7cc2a8e194a75fb2064736f6c63430008090033";

export class TokenLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(overrides || {}) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
