/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAck",
        type: "address",
      },
    ],
    name: "TokenMapAck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenMapReq",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMapped",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMappedInv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RxTokens",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMappedInv",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TxTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "thisSideToken",
        type: "address",
      },
    ],
    name: "issueTokenMapReq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "otherSideBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BridgedToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638487b9cf116100715780638487b9cf14610150578063ae24fbb414610180578063cd06c3a1146101b0578063d650d3f7146101cf578063e05bdaf7146101ff578063e71575e81461022f576100a9565b806335c6814d146100ae5780634ae83c8e146100de5780634d2be8e5146100fa57806359508f8f146101185780637750c9f014610134575b600080fd5b6100c860048036038101906100c391906116b2565b61025f565b6040516100d5919061175e565b60405180910390f35b6100f860048036038101906100f391906117c9565b61029e565b005b6101026106d6565b60405161010f9190611805565b60405180910390f35b610132600480360381019061012d919061188a565b6106fc565b005b61014e6004803603810190610149919061191b565b610b50565b005b61016a6004803603810190610165919061196e565b6111a0565b6040516101779190611805565b60405180910390f35b61019a600480360381019061019591906116b2565b6111d3565b6040516101a791906119bc565b60405180910390f35b6101b8611212565b6040516101c69291906119e6565b60405180910390f35b6101e960048036038101906101e4919061196e565b6112ad565b6040516101f691906119bc565b60405180910390f35b6102196004803603810190610214919061196e565b6112e0565b604051610226919061175e565b60405180910390f35b6102496004803603810190610244919061196e565b611313565b6040516102569190611805565b60405180910390f35b6001818154811061026f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102ca7f77dfd12de21ce6b9528d500f58060ca0cc0b8c879178ab8d74b4c2dfb1adf62960001b611346565b6102f67f822f9bf01ef848ea04eb068fb05c8f68dcea55c52f43d0f08869d49b82880c1060001b611346565b6103227f3d6f50d7702881f4e3d4ea6e5d5777378c3825234146b4a6cbc3a01c9ffde7e860001b611346565b61034e7f369ec0d3d7f1f160840a157c66925677a1a78f6f2f60de559d224bc87b5edaad60001b611346565b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611a6c565b60405180910390fd5b6104487fb186ca234691f561aa595647488a220a2be9eea914d73abe2b14730fa8ac67fe60001b611346565b6104747f10f98314be36a2c0312716f91a6b8c2898ba0c8163d55891add82341da35c03a60001b611346565b6104a07f9d0843b31408838ece9a83f00ee02b1c08f7fd26f49f57fe9445abea03fbbe6160001b611346565b60008190506104d17fbe10c4d86c42acacd0e1c99a35717e5ac475d9e4407fba42a99bd95bc6d30bb360001b611346565b6104fd7f12c2a4cd670292bf43f8b1f8c441eccb4054382069ec4ce6ce2ee51cbf8b829360001b611346565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611ac5565b60ff168273ffffffffffffffffffffffffffffffffffffffff167fc13b93ab57586894396c38a46a06c88056fdbb23c7c595f8d08274f9a8593a428373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156105fc57600080fd5b505afa158015610610573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106399190611c5c565b8473ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561067f57600080fd5b505afa158015610693573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106bc9190611c5c565b6040516106ca929190611ce9565b60405180910390a35050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107287f26d37c0ba80e8ea0d0d69fdff087240d3f8f89a908ab89f8d7dbe99b37af18ae60001b611349565b6107547fd75f373ec0cc0ce0b6a5b61ec833c53159ab0cb4022c423c56ea533eea0c5c8060001b611349565b6107807fb6bcac1bb5a623a29d00c8dd38bc01d80a88055c1a1f9de30c0fdca013fa4cb560001b611349565b6107ac7f39dfabc96032d8243a7bce9a5c466cf5cbc58f72def8049aaf2dadddf4cb989e60001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390611d6c565b60405180910390fd5b6108487f964af288862cbb037808c30b347b6ae5cf6cfab97c6896b5c3d3a8bba51066c260001b611349565b6108747f7872fdd337ec3d932b7996ba4b467d9e9c59727a2934721a685aab938b20e73860001b611349565b6108a07f85bc46949aaddbaa9b465d16e905f77db8ce23d480bf4824dbf0e3e48587b2a860001b611349565b6108cc7fb9c8bc184660db8c9113b0421df4fe6532560499eee548cf21cfec85eec6494960001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290611dd8565b60405180910390fd5b6109c77f9b54312ad1880694e1956b5db0573462d2ecf1b7df203e35a9dce0d620cec0dd60001b611349565b6109f37f5355e6a49f2d26ac60b5c6198ead60bccfa502384d0a87b55bbeeca428f2a48760001b611349565b610a1f7fb2ea9e34d318d75cfd90aa81af72b429eb34cb08dc1fe04a618640a8239d296f60001b611349565b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401610a5a929190611df8565b600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b50505050610ab87f7efcfa6e2fa7b62ca4343257282800d6a1c6f6e25ae1aaaffc941ccd3bed6c4460001b611349565b610ae47f718329f76c90cc4d843d6bfab4ec6f14d538ccca5e4930a8a5863ae67c9e583f60001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3dd1df88dc92e2788892542d81f999d720a44b4c127065d45c128f4f59fdc3738385604051610b43929190611e21565b60405180910390a3505050565b610b7c7fedb2fdf3eef49d7fc1de298c34312109b436f0cdad221640fbdd7d12c7cb6db460001b611349565b610ba87f263976831b41327982d61906ceda1023b40f98b6e9a998df98c23182d406df0360001b611349565b610bd47ff66a05b730578c401432a4b47bfc83781c06ac8291756d2e3971945923be9ab260001b611349565b610c007fce3128b8257b1918d693cc5f3e10de0d94119cde41378263ec7e5624aa889cc460001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790611d6c565b60405180910390fd5b610c9c7fd00ee1cd8dadcbc00619ef065e629de280be7cacbfec52f5f0a58ac97c38423e60001b611349565b610cc87fc2eeb4d542f46af354d2b16ac5edba5d130f157e5fe15844ec137a276d50318d60001b611349565b610cf47f75c2c8698d6ee87ae6b9ee59e82db86e028b575b174169021bc35aa335c9f80560001b611349565b610d207f290d2b3acd8322d757d3beb475f0b869f0b3f3ddb510f78b72a775513f91c1d160001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610def576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de690611dd8565b60405180910390fd5b610e1b7f858d4994af653ce4e23055f0d5a420d37ab9e90c2e3dfa50e94596f2572c8b3b60001b611349565b610e477f134280ef914b8fdd7fb910e5741ae82271f5caea5590f108ef84e2209234929c60001b611349565b610e737f6fa45abdb11bd068640d195c63658af2d1ccaf7c1aacddc32d67448e7672ced960001b611349565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610eae9190611805565b60206040518083038186803b158015610ec657600080fd5b505afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611e5f565b9050610f2c7f50652c545e6c1f3209c32492d7f0e26d6a0eeb388cf9c92d8d80e6358b7f8ac860001b611349565b610f587f921e7af9196f9f0441272c0ba9ee0f54935b81913d624e27191363b649d5b90160001b611349565b610f853330848773ffffffffffffffffffffffffffffffffffffffff1661134c909392919063ffffffff16565b610fb17f58a43cf47a1bc39702cb59b6050ad46d1c3f9c214624520199ff7c90c8a6fa1160001b611349565b610fdd7fbf0f427c9e213e0a4460f43d8f21384fb4df17dd4869dbeef003d701658bec1160001b611349565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110189190611805565b60206040518083038186803b15801561103057600080fd5b505afa158015611044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110689190611e5f565b90506110967f73a20d7833749cf28f1f8454d82dadbbe12675b6fc5c2f44dcbcfc62ecb2162260001b611349565b6110c27f60c44a7c93edbe39344a44ca98bc5ccea4fda7d40fec223d1857f4e88c6ca44160001b611349565b60006110d783836113d590919063ffffffff16565b90506111057f826e77f870d51c6ad352d2789410b79afa2e4edfb19cdc1a83e0e1524c03a2af60001b611349565b6111317f6bacad76b07409a033e4cb35b4eb3fc5cc5905534d7e13cf7f8e5da6b1fc1ea360001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f4c6ab40ee4cfa212a441d32ee2897945b4a52461284f9369e23fdf8faa6cdd698388604051611190929190611e21565b60405180910390a3505050505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106111e357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806112417f5a71a6e0f257721d54647e8eb9af98801a937468b768f9fc04b0499fa2d7697c60001b611346565b61126d7f0ccc5813cfd4cfda512a33a2ba8869a8667fb8f08393533ddf7adfb7886c977560001b611346565b6112997f90751e42eff7c5ecae4aa1bdaa92c11ab235eecdb1c403e74e28357952a6896e60001b611346565b600080549050600180549050915091509091565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6113cf846323b872dd60e01b85858560405160240161136d93929190611e8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113eb565b50505050565b600081836113e39190611ef2565b905092915050565b600061144d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114b29092919063ffffffff16565b90506000815111156114ad578080602001905181019061146d9190611f5e565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390611ffd565b60405180910390fd5b5b505050565b60606114c184846000856114ca565b90509392505050565b60608247101561150f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115069061208f565b60405180910390fd5b611518856115de565b611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e906120fb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516115809190612162565b60006040518083038185875af1925050503d80600081146115bd576040519150601f19603f3d011682016040523d82523d6000602084013e6115c2565b606091505b50915091506115d2828286611601565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561161157829050611661565b6000835111156116245782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116589190612179565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61168f8161167c565b811461169a57600080fd5b50565b6000813590506116ac81611686565b92915050565b6000602082840312156116c8576116c7611672565b5b60006116d68482850161169d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061172461171f61171a846116df565b6116ff565b6116df565b9050919050565b600061173682611709565b9050919050565b60006117488261172b565b9050919050565b6117588161173d565b82525050565b6000602082019050611773600083018461174f565b92915050565b6000611784826116df565b9050919050565b600061179682611779565b9050919050565b6117a68161178b565b81146117b157600080fd5b50565b6000813590506117c38161179d565b92915050565b6000602082840312156117df576117de611672565b5b60006117ed848285016117b4565b91505092915050565b6117ff81611779565b82525050565b600060208201905061181a60008301846117f6565b92915050565b600061182b82611779565b9050919050565b61183b81611820565b811461184657600080fd5b50565b60008135905061185881611832565b92915050565b61186781611779565b811461187257600080fd5b50565b6000813590506118848161185e565b92915050565b6000806000606084860312156118a3576118a2611672565b5b60006118b186828701611849565b93505060206118c286828701611875565b92505060406118d38682870161169d565b9150509250925092565b60006118e882611779565b9050919050565b6118f8816118dd565b811461190357600080fd5b50565b600081359050611915816118ef565b92915050565b60008060006060848603121561193457611933611672565b5b600061194286828701611906565b935050602061195386828701611875565b92505060406119648682870161169d565b9150509250925092565b60006020828403121561198457611983611672565b5b600061199284828501611875565b91505092915050565b60006119a68261172b565b9050919050565b6119b68161199b565b82525050565b60006020820190506119d160008301846119ad565b92915050565b6119e08161167c565b82525050565b60006040820190506119fb60008301856119d7565b611a0860208301846119d7565b9392505050565b600082825260208201905092915050565b7f746f6b656e20697320616c7265616479206d6170706564000000000000000000600082015250565b6000611a56601783611a0f565b9150611a6182611a20565b602082019050919050565b60006020820190508181036000830152611a8581611a49565b9050919050565b600060ff82169050919050565b611aa281611a8c565b8114611aad57600080fd5b50565b600081519050611abf81611a99565b92915050565b600060208284031215611adb57611ada611672565b5b6000611ae984828501611ab0565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4582611afc565b810181811067ffffffffffffffff82111715611b6457611b63611b0d565b5b80604052505050565b6000611b77611668565b9050611b838282611b3c565b919050565b600067ffffffffffffffff821115611ba357611ba2611b0d565b5b611bac82611afc565b9050602081019050919050565b60005b83811015611bd7578082015181840152602081019050611bbc565b83811115611be6576000848401525b50505050565b6000611bff611bfa84611b88565b611b6d565b905082815260208101848484011115611c1b57611c1a611af7565b5b611c26848285611bb9565b509392505050565b600082601f830112611c4357611c42611af2565b5b8151611c53848260208601611bec565b91505092915050565b600060208284031215611c7257611c71611672565b5b600082015167ffffffffffffffff811115611c9057611c8f611677565b5b611c9c84828501611c2e565b91505092915050565b600081519050919050565b6000611cbb82611ca5565b611cc58185611a0f565b9350611cd5818560208601611bb9565b611cde81611afc565b840191505092915050565b60006040820190508181036000830152611d038185611cb0565b90508181036020830152611d178184611cb0565b90509392505050565b7f726563697069656e742069732061207a65726f20616464726573730000000000600082015250565b6000611d56601b83611a0f565b9150611d6182611d20565b602082019050919050565b60006020820190508181036000830152611d8581611d49565b9050919050565b7f62726964676520646f6573206e6f742065786973740000000000000000000000600082015250565b6000611dc2601583611a0f565b9150611dcd82611d8c565b602082019050919050565b60006020820190508181036000830152611df181611db5565b9050919050565b6000604082019050611e0d60008301856117f6565b611e1a60208301846119d7565b9392505050565b6000604082019050611e3660008301856119d7565b611e4360208301846117f6565b9392505050565b600081519050611e5981611686565b92915050565b600060208284031215611e7557611e74611672565b5b6000611e8384828501611e4a565b91505092915050565b6000606082019050611ea160008301866117f6565b611eae60208301856117f6565b611ebb60408301846119d7565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611efd8261167c565b9150611f088361167c565b925082821015611f1b57611f1a611ec3565b5b828203905092915050565b60008115159050919050565b611f3b81611f26565b8114611f4657600080fd5b50565b600081519050611f5881611f32565b92915050565b600060208284031215611f7457611f73611672565b5b6000611f8284828501611f49565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fe7602a83611a0f565b9150611ff282611f8b565b604082019050919050565b6000602082019050818103600083015261201681611fda565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612079602683611a0f565b91506120848261201d565b604082019050919050565b600060208201905081810360008301526120a88161206c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006120e5601d83611a0f565b91506120f0826120af565b602082019050919050565b60006020820190508181036000830152612114816120d8565b9050919050565b600081519050919050565b600081905092915050565b600061213c8261211b565b6121468185612126565b9350612156818560208601611bb9565b80840191505092915050565b600061216e8284612131565b915081905092915050565b600060208201905081810360008301526121938184611cb0565b90509291505056fea2646970667358221220beb1ef12288e1ecee82de219404fada6326f48123eb0760e178cd548a22d078b64736f6c63430008090033";

export class TokenLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(overrides || {}) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
