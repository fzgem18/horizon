/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAck",
        type: "address",
      },
    ],
    name: "TokenMapAck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenMapReq",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMapped",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMappedInv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RxTokens",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMappedInv",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TxTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "thisSideToken",
        type: "address",
      },
    ],
    name: "issueTokenMapReq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "otherSideBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BridgedToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d4e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638487b9cf116100715780638487b9cf1461012c578063ae24fbb414610155578063cd06c3a114610168578063d650d3f714610183578063e05bdaf7146101ac578063e71575e8146101d557600080fd5b806335c6814d146100ae5780634ae83c8e146100de5780634d2be8e5146100f357806359508f8f146101065780637750c9f014610119575b600080fd5b6100c16100bc366004610a99565b6101fe565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec366004610aca565b610228565b005b6006546100c1906001600160a01b031681565b6100f1610114366004610ae7565b61043d565b6100f1610127366004610ae7565b61059e565b6100c161013a366004610aca565b6005602052600090815260409020546001600160a01b031681565b6100c1610163366004610a99565b6107be565b600054600154604080519283526020830191909152016100d5565b6100c1610191366004610aca565b6003602052600090815260409020546001600160a01b031681565b6100c16101ba366004610aca565b6004602052600090815260409020546001600160a01b031681565b6100c16101e3366004610aca565b6002602052600090815260409020546001600160a01b031681565b6001818154811061020e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381811660009081526002602052604090205416156102955760405162461bcd60e51b815260206004820152601760248201527f746f6b656e20697320616c7265616479206d617070656400000000000000000060448201526064015b60405180910390fd5b6000819050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d357600080fd5b505afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b9190610b28565b60ff16826001600160a01b03167fc13b93ab57586894396c38a46a06c88056fdbb23c7c595f8d08274f9a8593a42836001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561037257600080fd5b505afa158015610386573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ae9190810190610b8d565b846001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104239190810190610b8d565b604051610431929190610c5b565b60405180910390a35050565b6001600160a01b0382166104935760405162461bcd60e51b815260206004820152601b60248201527f726563697069656e742069732061207a65726f20616464726573730000000000604482015260640161028c565b6001600160a01b03838116600090815260056020526040902054166104f25760405162461bcd60e51b8152602060048201526015602482015274189c9a5919d948191bd95cc81b9bdd08195e1a5cdd605a1b604482015260640161028c565b60405163079cc67960e41b8152336004820152602481018290526001600160a01b038416906379cc679090604401600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b5050604080518481526001600160a01b038681166020830152339450871692507f3dd1df88dc92e2788892542d81f999d720a44b4c127065d45c128f4f59fdc373910160405180910390a3505050565b6001600160a01b0382166105f45760405162461bcd60e51b815260206004820152601b60248201527f726563697069656e742069732061207a65726f20616464726573730000000000604482015260640161028c565b6001600160a01b03838116600090815260026020526040902054166106535760405162461bcd60e51b8152602060048201526015602482015274189c9a5919d948191bd95cc81b9bdd08195e1a5cdd605a1b604482015260640161028c565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610c89565b90506106e46001600160a01b0385163330856107ce565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a082319060240160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e9190610c89565b9050600061076c828461082e565b604080518281526001600160a01b03888116602083015292935033928916917f4c6ab40ee4cfa212a441d32ee2897945b4a52461284f9369e23fdf8faa6cdd69910160405180910390a3505050505050565b6000818154811061020e57600080fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610828908590610841565b50505050565b600061083a8284610ca2565b9392505050565b6000610896826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109189092919063ffffffff16565b80519091501561091357808060200190518101906108b49190610cc7565b6109135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161028c565b505050565b6060610927848460008561092f565b949350505050565b6060824710156109905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161028c565b6001600160a01b0385163b6109e75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028c565b600080866001600160a01b03168587604051610a039190610ce9565b60006040518083038185875af1925050503d8060008114610a40576040519150601f19603f3d011682016040523d82523d6000602084013e610a45565b606091505b5091509150610a55828286610a60565b979650505050505050565b60608315610a6f57508161083a565b825115610a7f5782518084602001fd5b8160405162461bcd60e51b815260040161028c9190610d05565b600060208284031215610aab57600080fd5b5035919050565b6001600160a01b0381168114610ac757600080fd5b50565b600060208284031215610adc57600080fd5b813561083a81610ab2565b600080600060608486031215610afc57600080fd5b8335610b0781610ab2565b92506020840135610b1781610ab2565b929592945050506040919091013590565b600060208284031215610b3a57600080fd5b815160ff8116811461083a57600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b7c578181015183820152602001610b64565b838111156108285750506000910152565b600060208284031215610b9f57600080fd5b815167ffffffffffffffff80821115610bb757600080fd5b818401915084601f830112610bcb57600080fd5b815181811115610bdd57610bdd610b4b565b604051601f8201601f19908116603f01168101908382118183101715610c0557610c05610b4b565b81604052828152876020848701011115610c1e57600080fd5b610a55836020830160208801610b61565b60008151808452610c47816020860160208601610b61565b601f01601f19169290920160200192915050565b604081526000610c6e6040830185610c2f565b8281036020840152610c808185610c2f565b95945050505050565b600060208284031215610c9b57600080fd5b5051919050565b600082821015610cc257634e487b7160e01b600052601160045260246000fd5b500390565b600060208284031215610cd957600080fd5b8151801515811461083a57600080fd5b60008251610cfb818460208701610b61565b9190910192915050565b60208152600061083a6020830184610c2f56fea2646970667358221220fb314ad69999146fa251d57de501ee8fc44bdb1a10426d62dbf5b55feeaabac764736f6c63430008090033";

export class TokenLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(overrides || {}) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
