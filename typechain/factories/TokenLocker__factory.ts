/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAck",
        type: "address",
      },
    ],
    name: "TokenMapAck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenReq",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenMapReq",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMapped",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RxMappedInv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RxTokens",
    outputs: [
      {
        internalType: "contract BridgedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TxMappedInv",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TxTokens",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20Upgradeable",
        name: "thisSideToken",
        type: "address",
      },
    ],
    name: "issueTokenMapReq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "otherSideBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BridgedToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612173806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638487b9cf116100715780638487b9cf14610150578063ae24fbb414610180578063cd06c3a1146101b0578063d650d3f7146101cf578063e05bdaf7146101ff578063e71575e81461022f576100a9565b806335c6814d146100ae5780634ae83c8e146100de5780634d2be8e5146100fa57806359508f8f146101185780637750c9f014610134575b600080fd5b6100c860048036038101906100c391906118d2565b61025f565b6040516100d59190611b57565b60405180910390f35b6100f860048036038101906100f39190611819565b61029e565b005b6101026106d6565b60405161010f9190611adc565b60405180910390f35b610132600480360381019061012d91906117ca565b6106fc565b005b61014e60048036038101906101499190611842565b610b50565b005b61016a60048036038101906101659190611778565b6111a0565b6040516101779190611adc565b60405180910390f35b61019a600480360381019061019591906118d2565b6111d3565b6040516101a79190611b72565b60405180910390f35b6101b8611212565b6040516101c6929190611ccf565b60405180910390f35b6101e960048036038101906101e49190611778565b6112ad565b6040516101f69190611b72565b60405180910390f35b61021960048036038101906102149190611778565b6112e0565b6040516102269190611b57565b60405180910390f35b61024960048036038101906102449190611778565b611313565b6040516102569190611adc565b60405180910390f35b6001818154811061026f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102ca7f77dfd12de21ce6b9528d500f58060ca0cc0b8c879178ab8d74b4c2dfb1adf62960001b611346565b6102f67f822f9bf01ef848ea04eb068fb05c8f68dcea55c52f43d0f08869d49b82880c1060001b611346565b6103227f3d6f50d7702881f4e3d4ea6e5d5777378c3825234146b4a6cbc3a01c9ffde7e860001b611346565b61034e7f369ec0d3d7f1f160840a157c66925677a1a78f6f2f60de559d224bc87b5edaad60001b611346565b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611c26565b60405180910390fd5b6104487fb186ca234691f561aa595647488a220a2be9eea914d73abe2b14730fa8ac67fe60001b611346565b6104747f10f98314be36a2c0312716f91a6b8c2898ba0c8163d55891add82341da35c03a60001b611346565b6104a07f9d0843b31408838ece9a83f00ee02b1c08f7fd26f49f57fe9445abea03fbbe6160001b611346565b60008190506104d17fbe10c4d86c42acacd0e1c99a35717e5ac475d9e4407fba42a99bd95bc6d30bb360001b611346565b6104fd7f12c2a4cd670292bf43f8b1f8c441eccb4054382069ec4ce6ce2ee51cbf8b829360001b611346565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611924565b60ff168273ffffffffffffffffffffffffffffffffffffffff167fc13b93ab57586894396c38a46a06c88056fdbb23c7c595f8d08274f9a8593a428373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156105fc57600080fd5b505afa158015610610573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106399190611891565b8473ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561067f57600080fd5b505afa158015610693573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106bc9190611891565b6040516106ca929190611baf565b60405180910390a35050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107287f26d37c0ba80e8ea0d0d69fdff087240d3f8f89a908ab89f8d7dbe99b37af18ae60001b611349565b6107547fd75f373ec0cc0ce0b6a5b61ec833c53159ab0cb4022c423c56ea533eea0c5c8060001b611349565b6107807fb6bcac1bb5a623a29d00c8dd38bc01d80a88055c1a1f9de30c0fdca013fa4cb560001b611349565b6107ac7f39dfabc96032d8243a7bce9a5c466cf5cbc58f72def8049aaf2dadddf4cb989e60001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390611c46565b60405180910390fd5b6108487f964af288862cbb037808c30b347b6ae5cf6cfab97c6896b5c3d3a8bba51066c260001b611349565b6108747f7872fdd337ec3d932b7996ba4b467d9e9c59727a2934721a685aab938b20e73860001b611349565b6108a07f85bc46949aaddbaa9b465d16e905f77db8ce23d480bf4824dbf0e3e48587b2a860001b611349565b6108cc7fb9c8bc184660db8c9113b0421df4fe6532560499eee548cf21cfec85eec6494960001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290611be6565b60405180910390fd5b6109c77f9b54312ad1880694e1956b5db0573462d2ecf1b7df203e35a9dce0d620cec0dd60001b611349565b6109f37f5355e6a49f2d26ac60b5c6198ead60bccfa502384d0a87b55bbeeca428f2a48760001b611349565b610a1f7fb2ea9e34d318d75cfd90aa81af72b429eb34cb08dc1fe04a618640a8239d296f60001b611349565b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401610a5a929190611b2e565b600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b50505050610ab87f7efcfa6e2fa7b62ca4343257282800d6a1c6f6e25ae1aaaffc941ccd3bed6c4460001b611349565b610ae47f718329f76c90cc4d843d6bfab4ec6f14d538ccca5e4930a8a5863ae67c9e583f60001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3dd1df88dc92e2788892542d81f999d720a44b4c127065d45c128f4f59fdc3738385604051610b43929190611ca6565b60405180910390a3505050565b610b7c7fedb2fdf3eef49d7fc1de298c34312109b436f0cdad221640fbdd7d12c7cb6db460001b611349565b610ba87f263976831b41327982d61906ceda1023b40f98b6e9a998df98c23182d406df0360001b611349565b610bd47ff66a05b730578c401432a4b47bfc83781c06ac8291756d2e3971945923be9ab260001b611349565b610c007fce3128b8257b1918d693cc5f3e10de0d94119cde41378263ec7e5624aa889cc460001b611349565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790611c46565b60405180910390fd5b610c9c7fd00ee1cd8dadcbc00619ef065e629de280be7cacbfec52f5f0a58ac97c38423e60001b611349565b610cc87fc2eeb4d542f46af354d2b16ac5edba5d130f157e5fe15844ec137a276d50318d60001b611349565b610cf47f75c2c8698d6ee87ae6b9ee59e82db86e028b575b174169021bc35aa335c9f80560001b611349565b610d207f290d2b3acd8322d757d3beb475f0b869f0b3f3ddb510f78b72a775513f91c1d160001b611349565b600073ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610def576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de690611be6565b60405180910390fd5b610e1b7f858d4994af653ce4e23055f0d5a420d37ab9e90c2e3dfa50e94596f2572c8b3b60001b611349565b610e477f134280ef914b8fdd7fb910e5741ae82271f5caea5590f108ef84e2209234929c60001b611349565b610e737f6fa45abdb11bd068640d195c63658af2d1ccaf7c1aacddc32d67448e7672ced960001b611349565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610eae9190611adc565b60206040518083038186803b158015610ec657600080fd5b505afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe91906118fb565b9050610f2c7f50652c545e6c1f3209c32492d7f0e26d6a0eeb388cf9c92d8d80e6358b7f8ac860001b611349565b610f587f921e7af9196f9f0441272c0ba9ee0f54935b81913d624e27191363b649d5b90160001b611349565b610f853330848773ffffffffffffffffffffffffffffffffffffffff1661134c909392919063ffffffff16565b610fb17f58a43cf47a1bc39702cb59b6050ad46d1c3f9c214624520199ff7c90c8a6fa1160001b611349565b610fdd7fbf0f427c9e213e0a4460f43d8f21384fb4df17dd4869dbeef003d701658bec1160001b611349565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110189190611adc565b60206040518083038186803b15801561103057600080fd5b505afa158015611044573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106891906118fb565b90506110967f73a20d7833749cf28f1f8454d82dadbbe12675b6fc5c2f44dcbcfc62ecb2162260001b611349565b6110c27f60c44a7c93edbe39344a44ca98bc5ccea4fda7d40fec223d1857f4e88c6ca44160001b611349565b60006110d783836113d590919063ffffffff16565b90506111057f826e77f870d51c6ad352d2789410b79afa2e4edfb19cdc1a83e0e1524c03a2af60001b611349565b6111317f6bacad76b07409a033e4cb35b4eb3fc5cc5905534d7e13cf7f8e5da6b1fc1ea360001b611349565b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f4c6ab40ee4cfa212a441d32ee2897945b4a52461284f9369e23fdf8faa6cdd698388604051611190929190611ca6565b60405180910390a3505050505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106111e357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806112417f5a71a6e0f257721d54647e8eb9af98801a937468b768f9fc04b0499fa2d7697c60001b611346565b61126d7f0ccc5813cfd4cfda512a33a2ba8869a8667fb8f08393533ddf7adfb7886c977560001b611346565b6112997f90751e42eff7c5ecae4aa1bdaa92c11ab235eecdb1c403e74e28357952a6896e60001b611346565b600080549050600180549050915091509091565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b50565b6113cf846323b872dd60e01b85858560405160240161136d93929190611af7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113eb565b50505050565b600081836113e39190611d80565b905092915050565b600061144d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114b29092919063ffffffff16565b90506000815111156114ad578080602001905181019061146d91906117a1565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390611c86565b60405180910390fd5b5b505050565b60606114c184846000856114ca565b90509392505050565b60608247101561150f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150690611c06565b60405180910390fd5b611518856115de565b611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90611c66565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516115809190611ac5565b60006040518083038185875af1925050503d80600081146115bd576040519150601f19603f3d011682016040523d82523d6000602084013e6115c2565b606091505b50915091506115d2828286611601565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561161157829050611661565b6000835111156116245782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116589190611b8d565b60405180910390fd5b9392505050565b600061167b61167684611d1d565b611cf8565b90508281526020810184848401111561169357600080fd5b61169e848285611e87565b509392505050565b6000813590506116b58161209c565b92915050565b6000815190506116ca816120b3565b92915050565b6000813590506116df816120ca565b92915050565b6000813590506116f4816120e1565b92915050565b600081359050611709816120f8565b92915050565b600082601f83011261172057600080fd5b8151611730848260208601611668565b91505092915050565b6000813590506117488161210f565b92915050565b60008151905061175d8161210f565b92915050565b60008151905061177281612126565b92915050565b60006020828403121561178a57600080fd5b6000611798848285016116a6565b91505092915050565b6000602082840312156117b357600080fd5b60006117c1848285016116bb565b91505092915050565b6000806000606084860312156117df57600080fd5b60006117ed868287016116d0565b93505060206117fe868287016116a6565b925050604061180f86828701611739565b9150509250925092565b60006020828403121561182b57600080fd5b6000611839848285016116e5565b91505092915050565b60008060006060848603121561185757600080fd5b6000611865868287016116fa565b9350506020611876868287016116a6565b925050604061188786828701611739565b9150509250925092565b6000602082840312156118a357600080fd5b600082015167ffffffffffffffff8111156118bd57600080fd5b6118c98482850161170f565b91505092915050565b6000602082840312156118e457600080fd5b60006118f284828501611739565b91505092915050565b60006020828403121561190d57600080fd5b600061191b8482850161174e565b91505092915050565b60006020828403121561193657600080fd5b600061194484828501611763565b91505092915050565b61195681611db4565b82525050565b600061196782611d4e565b6119718185611d64565b9350611981818560208601611e87565b80840191505092915050565b61199681611e3f565b82525050565b6119a581611e63565b82525050565b60006119b682611d59565b6119c08185611d6f565b93506119d0818560208601611e87565b6119d981611f49565b840191505092915050565b60006119f1601583611d6f565b91506119fc82611f5a565b602082019050919050565b6000611a14602683611d6f565b9150611a1f82611f83565b604082019050919050565b6000611a37601783611d6f565b9150611a4282611fd2565b602082019050919050565b6000611a5a601b83611d6f565b9150611a6582611ffb565b602082019050919050565b6000611a7d601d83611d6f565b9150611a8882612024565b602082019050919050565b6000611aa0602a83611d6f565b9150611aab8261204d565b604082019050919050565b611abf81611e28565b82525050565b6000611ad1828461195c565b915081905092915050565b6000602082019050611af1600083018461194d565b92915050565b6000606082019050611b0c600083018661194d565b611b19602083018561194d565b611b266040830184611ab6565b949350505050565b6000604082019050611b43600083018561194d565b611b506020830184611ab6565b9392505050565b6000602082019050611b6c600083018461198d565b92915050565b6000602082019050611b87600083018461199c565b92915050565b60006020820190508181036000830152611ba781846119ab565b905092915050565b60006040820190508181036000830152611bc981856119ab565b90508181036020830152611bdd81846119ab565b90509392505050565b60006020820190508181036000830152611bff816119e4565b9050919050565b60006020820190508181036000830152611c1f81611a07565b9050919050565b60006020820190508181036000830152611c3f81611a2a565b9050919050565b60006020820190508181036000830152611c5f81611a4d565b9050919050565b60006020820190508181036000830152611c7f81611a70565b9050919050565b60006020820190508181036000830152611c9f81611a93565b9050919050565b6000604082019050611cbb6000830185611ab6565b611cc8602083018461194d565b9392505050565b6000604082019050611ce46000830185611ab6565b611cf16020830184611ab6565b9392505050565b6000611d02611d13565b9050611d0e8282611eba565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611f1a565b5b611d4182611f49565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611d8b82611e28565b9150611d9683611e28565b925082821015611da957611da8611eeb565b5b828203905092915050565b6000611dbf82611e08565b9050919050565b60008115159050919050565b6000611ddd82611db4565b9050919050565b6000611def82611db4565b9050919050565b6000611e0182611db4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611e4a82611e51565b9050919050565b6000611e5c82611e08565b9050919050565b6000611e6e82611e75565b9050919050565b6000611e8082611e08565b9050919050565b60005b83811015611ea5578082015181840152602081019050611e8a565b83811115611eb4576000848401525b50505050565b611ec382611f49565b810181811067ffffffffffffffff82111715611ee257611ee1611f1a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f62726964676520646f6573206e6f742065786973740000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e20697320616c7265616479206d6170706564000000000000000000600082015250565b7f726563697069656e742069732061207a65726f20616464726573730000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6120a581611db4565b81146120b057600080fd5b50565b6120bc81611dc6565b81146120c757600080fd5b50565b6120d381611dd2565b81146120de57600080fd5b50565b6120ea81611de4565b81146120f557600080fd5b50565b61210181611df6565b811461210c57600080fd5b50565b61211881611e28565b811461212357600080fd5b50565b61212f81611e32565b811461213a57600080fd5b5056fea26469706673582212203aa478d8b5331bb00308deaaf52e5955b2d9435b4817c0f6a022f6bb09f1771664736f6c63430008040033";

export class TokenLocker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(overrides || {}) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
