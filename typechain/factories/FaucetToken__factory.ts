/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FaucetToken, FaucetTokenInterface } from "../FaucetToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611eb8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b8063313ce567146101aa57806339509351146101c857806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f25780631249c58b146101225780631624f6c61461014057806318160ddd1461015c57806323b872dd1461017a575b600080fd5b6100dc6102d6565b6040516100e99190611591565b60405180910390f35b61010c600480360381019061010791906112cd565b610368565b604051610119919061155b565b60405180910390f35b61012a61038b565b604051610137919061155b565b60405180910390f35b61015a60048036038101906101559190611309565b6104fb565b005b610164610618565b60405161017191906116f3565b60405180910390f35b610194600480360381019061018f919061127e565b610622565b6040516101a1919061155b565b60405180910390f35b6101b2610651565b6040516101bf919061170e565b60405180910390f35b6101e260048036038101906101dd91906112cd565b61065a565b6040516101ef919061155b565b60405180910390f35b610212600480360381019061020d9190611219565b610691565b60405161021f91906116f3565b60405180910390f35b6102306106da565b60405161023d9190611591565b60405180910390f35b610260600480360381019061025b91906112cd565b61076c565b60405161026d919061155b565b60405180910390f35b610290600480360381019061028b91906112cd565b6107e3565b60405161029d919061155b565b60405180910390f35b6102c060048036038101906102bb9190611242565b610806565b6040516102cd91906116f3565b60405180910390f35b6060603680546102e590611a65565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611a65565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b60008061037361088d565b9050610380818585610895565b600191505092915050565b60006103b97fe4cd156ff37953ecdf3aa726deba4aa22d8f63122a9466d7d8cbb5a289ffed6d60001b610a60565b6103e57f341d3f34e2730f9374620580450b67e0b2032acc82339df3bf0e3f7d5bcc25de60001b610a60565b6104117f9ce6dfb0a6b25739f1f07ce8a64f8ac997feb6b5ec9ac4fa08f15eaed682177460001b610a60565b600061041b610651565b60ff16600a61042a9190611844565b90506104587fd50fae0fa19c30169d3f2d57c0ff7748474549ba55fd94563e30b00718eab0c260001b610a60565b6104847fe90375e8f9c2a6c57c1759ef30e8722c2c29964eebc9bee3f1f41767f770117760001b610a60565b61049b33826127106104969190611962565b610a63565b6104c77f1e2184136974b3ce4842af39e8303190c1526a01272b2ab0dd62b4cc4b577dfd60001b610a60565b6104f37f41446f2bc1db38b7406ecfe6ca8ee716c2a5ea6f60e40e26699ddc10fde4e68860001b610a60565b600191505090565b60006105076001610bc4565b9050801561052b576001600060016101000a81548160ff0219169083151502179055505b6105577f057c990fcded1fe0acc1c4b5d700ac8a139fe64560a65dc9b84d1eccd6adae7b60001b610a60565b6105837fde04ad728b24b6f782c63da49de0668004a81a30f6ae7e74b97a0c8cd53f1dea60001b610a60565b6105af7fa6145b88e40b7b73a81fc8c88b93a573793b5b7919556d7abf1231a01d9095dd60001b610a60565b6105b98484610cb4565b80156106125760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106099190611576565b60405180910390a15b50505050565b6000603554905090565b60008061062d61088d565b905061063a858285610d11565b610645858585610d9d565b60019150509392505050565b60006012905090565b60008061066561088d565b90506106868185856106778589610806565b610681919061179b565b610895565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546106e990611a65565b80601f016020809104026020016040519081016040528092919081815260200182805461071590611a65565b80156107625780601f1061073757610100808354040283529160200191610762565b820191906000526020600020905b81548152906001019060200180831161074557829003601f168201915b5050505050905090565b60008061077761088d565b905060006107858286610806565b9050838110156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c1906116b3565b60405180910390fd5b6107d78286868403610895565b60019250505092915050565b6000806107ee61088d565b90506107fb818585610d9d565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90611673565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906115d3565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a5391906116f3565b60405180910390a3505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca906116d3565b60405180910390fd5b610adf60008383611021565b8060356000828254610af1919061179b565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b47919061179b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bac91906116f3565b60405180910390a3610bc060008383611026565b5050565b60008060019054906101000a900460ff1615610c3b5760018260ff16148015610bf35750610bf13061102b565b155b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2990611633565b60405180910390fd5b60009050610caf565b8160ff1660008054906101000a900460ff1660ff1610610c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8790611633565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa90611693565b60405180910390fd5b610d0d828261104e565b5050565b6000610d1d8484610806565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d975781811015610d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d80906115f3565b60405180910390fd5b610d968484848403610895565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0490611653565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e74906115b3565b60405180910390fd5b610e88838383611021565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0690611613565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa4919061179b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161100891906116f3565b60405180910390a361101b848484611026565b50505050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661109d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109490611693565b60405180910390fd5b81603690805190602001906110b39291906110cf565b5080603790805190602001906110ca9291906110cf565b505050565b8280546110db90611a65565b90600052602060002090601f0160209004810192826110fd5760008555611144565b82601f1061111657805160ff1916838001178555611144565b82800160010185558215611144579182015b82811115611143578251825591602001919060010190611128565b5b5090506111519190611155565b5090565b5b8082111561116e576000816000905550600101611156565b5090565b60006111856111808461174e565b611729565b90508281526020810184848401111561119d57600080fd5b6111a8848285611a23565b509392505050565b6000813590506111bf81611e3d565b92915050565b600082601f8301126111d657600080fd5b81356111e6848260208601611172565b91505092915050565b6000813590506111fe81611e54565b92915050565b60008135905061121381611e6b565b92915050565b60006020828403121561122b57600080fd5b6000611239848285016111b0565b91505092915050565b6000806040838503121561125557600080fd5b6000611263858286016111b0565b9250506020611274858286016111b0565b9150509250929050565b60008060006060848603121561129357600080fd5b60006112a1868287016111b0565b93505060206112b2868287016111b0565b92505060406112c3868287016111ef565b9150509250925092565b600080604083850312156112e057600080fd5b60006112ee858286016111b0565b92505060206112ff858286016111ef565b9150509250929050565b60008060006060848603121561131e57600080fd5b600084013567ffffffffffffffff81111561133857600080fd5b611344868287016111c5565b935050602084013567ffffffffffffffff81111561136157600080fd5b61136d868287016111c5565b925050604061137e86828701611204565b9150509250925092565b611391816119ce565b82525050565b6113a081611a11565b82525050565b60006113b18261177f565b6113bb818561178a565b93506113cb818560208601611a32565b6113d481611b55565b840191505092915050565b60006113ec60238361178a565b91506113f782611b73565b604082019050919050565b600061140f60228361178a565b915061141a82611bc2565b604082019050919050565b6000611432601d8361178a565b915061143d82611c11565b602082019050919050565b600061145560268361178a565b915061146082611c3a565b604082019050919050565b6000611478602e8361178a565b915061148382611c89565b604082019050919050565b600061149b60258361178a565b91506114a682611cd8565b604082019050919050565b60006114be60248361178a565b91506114c982611d27565b604082019050919050565b60006114e1602b8361178a565b91506114ec82611d76565b604082019050919050565b600061150460258361178a565b915061150f82611dc5565b604082019050919050565b6000611527601f8361178a565b915061153282611e14565b602082019050919050565b611546816119fa565b82525050565b61155581611a04565b82525050565b60006020820190506115706000830184611388565b92915050565b600060208201905061158b6000830184611397565b92915050565b600060208201905081810360008301526115ab81846113a6565b905092915050565b600060208201905081810360008301526115cc816113df565b9050919050565b600060208201905081810360008301526115ec81611402565b9050919050565b6000602082019050818103600083015261160c81611425565b9050919050565b6000602082019050818103600083015261162c81611448565b9050919050565b6000602082019050818103600083015261164c8161146b565b9050919050565b6000602082019050818103600083015261166c8161148e565b9050919050565b6000602082019050818103600083015261168c816114b1565b9050919050565b600060208201905081810360008301526116ac816114d4565b9050919050565b600060208201905081810360008301526116cc816114f7565b9050919050565b600060208201905081810360008301526116ec8161151a565b9050919050565b6000602082019050611708600083018461153d565b92915050565b6000602082019050611723600083018461154c565b92915050565b6000611733611744565b905061173f8282611a97565b919050565b6000604051905090565b600067ffffffffffffffff82111561176957611768611b26565b5b61177282611b55565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006117a6826119fa565b91506117b1836119fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117e6576117e5611ac8565b5b828201905092915050565b6000808291508390505b600185111561183b5780860481111561181757611816611ac8565b5b60018516156118265780820291505b808102905061183485611b66565b94506117fb565b94509492505050565b600061184f826119fa565b915061185a836119fa565b92506118877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461188f565b905092915050565b60008261189f576001905061195b565b816118ad576000905061195b565b81600181146118c357600281146118cd576118fc565b600191505061195b565b60ff8411156118df576118de611ac8565b5b8360020a9150848211156118f6576118f5611ac8565b5b5061195b565b5060208310610133831016604e8410600b84101617156119315782820a90508381111561192c5761192b611ac8565b5b61195b565b61193e84848460016117f1565b9250905081840481111561195557611954611ac8565b5b81810290505b9392505050565b600061196d826119fa565b9150611978836119fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119b1576119b0611ac8565b5b828202905092915050565b60006119c7826119da565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a1c82611a04565b9050919050565b82818337600083830152505050565b60005b83811015611a50578082015181840152602081019050611a35565b83811115611a5f576000848401525b50505050565b60006002820490506001821680611a7d57607f821691505b60208210811415611a9157611a90611af7565b5b50919050565b611aa082611b55565b810181811067ffffffffffffffff82111715611abf57611abe611b26565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611e46816119bc565b8114611e5157600080fd5b50565b611e5d816119fa565b8114611e6857600080fd5b50565b611e7481611a04565b8114611e7f57600080fd5b5056fea2646970667358221220b2363d320c3598033192ace6fc8646fcdd940f64c0077609af11e9e82c70216564736f6c63430008040033";

export class FaucetToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetToken> {
    return super.deploy(overrides || {}) as Promise<FaucetToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FaucetToken {
    return super.attach(address) as FaucetToken;
  }
  connect(signer: Signer): FaucetToken__factory {
    return super.connect(signer) as FaucetToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetTokenInterface {
    return new utils.Interface(_abi) as FaucetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetToken {
    return new Contract(address, _abi, signerOrProvider) as FaucetToken;
  }
}
