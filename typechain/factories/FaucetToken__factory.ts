/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FaucetToken, FaucetTokenInterface } from "../FaucetToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ed4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806339509351146101ac5780634cd88b76146101dc57806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f25780631249c58b1461012257806318160ddd1461014057806323b872dd1461015e578063313ce5671461018e575b600080fd5b6100dc6102d6565b6040516100e9919061120a565b60405180910390f35b61010c600480360381019061010791906112d4565b610368565b604051610119919061132f565b60405180910390f35b61012a61038b565b604051610137919061132f565b60405180910390f35b6101486104fb565b6040516101559190611359565b60405180910390f35b61017860048036038101906101739190611374565b610505565b604051610185919061132f565b60405180910390f35b610196610534565b6040516101a391906113e3565b60405180910390f35b6101c660048036038101906101c191906112d4565b61053d565b6040516101d3919061132f565b60405180910390f35b6101f660048036038101906101f19190611533565b610574565b005b610212600480360381019061020d91906115ab565b610690565b60405161021f9190611359565b60405180910390f35b6102306106d9565b60405161023d919061120a565b60405180910390f35b610260600480360381019061025b91906112d4565b61076b565b60405161026d919061132f565b60405180910390f35b610290600480360381019061028b91906112d4565b6107e2565b60405161029d919061132f565b60405180910390f35b6102c060048036038101906102bb91906115d8565b610805565b6040516102cd9190611359565b60405180910390f35b6060603680546102e590611647565b80601f016020809104026020016040519081016040528092919081815260200182805461031190611647565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b60008061037361088c565b9050610380818585610894565b600191505092915050565b60006103b97feec921a30dd61bf3b33d32f13ac1f58542121085a480e95a903f4880f2ddab9f60001b610a5f565b6103e57ffb852ed028a50c1420c3de92283fba09ff68df55e852b7d5e3aabbf55234bf3f60001b610a5f565b6104117fa046a33be80c966e376da3d636af73663bd044524f7685a56f1e833b67aed17f60001b610a5f565b600061041b610534565b60ff16600a61042a91906117db565b90506104587f6f5390a6522d14f773f517b9e6e4ec2b3d9d557ce010d8ae575ac8ca6fa3decd60001b610a5f565b6104847f616f3f2b5d60143cb28882d9cea03db896ea828299abb8f84fecef0332e773e960001b610a5f565b61049b33826127106104969190611826565b610a62565b6104c77f6ca3257c65693114d716d2b9930db30bd1213ebb527c005068d7ac6fb05f901160001b610a5f565b6104f37fbda689acd44aef559f2586661b93a23d62b41b179dddd5becc158f9e933d8e2a60001b610a5f565b600191505090565b6000603554905090565b60008061051061088c565b905061051d858285610bc3565b610528858585610c4f565b60019150509392505050565b60006012905090565b60008061054861088c565b905061056981858561055a8589610805565b6105649190611880565b610894565b600191505092915050565b60006105806001610ed3565b905080156105a4576001600060016101000a81548160ff0219169083151502179055505b6105d07fb0377214642a6d4e1792d518ef85552bc70e67647713984ddd904faf805518f360001b610a5f565b6105fc7fdaf603f2b40681d2a1823b5733c0e2f115382f2199117b15acbfb02e8934f28d60001b610a5f565b6106287f53464a76497c7a6d709921adcd18c8bd445dd9db0df2204b5305c52c0d0f48e860001b610a5f565b6106328383610fc3565b801561068b5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610682919061191b565b60405180910390a15b505050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546106e890611647565b80601f016020809104026020016040519081016040528092919081815260200182805461071490611647565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050905090565b60008061077661088c565b905060006107848286610805565b9050838110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c0906119a8565b60405180910390fd5b6107d68286868403610894565b60019250505092915050565b6000806107ed61088c565b90506107fa818585610c4f565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611a3a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611acc565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a529190611359565b60405180910390a3505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990611b38565b60405180910390fd5b610ade60008383611020565b8060356000828254610af09190611880565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b469190611880565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bab9190611359565b60405180910390a3610bbf60008383611025565b5050565b6000610bcf8484610805565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c495781811015610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3290611ba4565b60405180910390fd5b610c488484848403610894565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690611c36565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2690611cc8565b60405180910390fd5b610d3a838383611020565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db890611d5a565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e569190611880565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eba9190611359565b60405180910390a3610ecd848484611025565b50505050565b60008060019054906101000a900460ff1615610f4a5760018260ff16148015610f025750610f003061102a565b155b610f41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3890611dec565b60405180910390fd5b60009050610fbe565b8160ff1660008054906101000a900460ff1660ff1610610f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9690611dec565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16611012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100990611e7e565b60405180910390fd5b61101c828261104d565b5050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390611e7e565b60405180910390fd5b81603690805190602001906110b29291906110ce565b5080603790805190602001906110c99291906110ce565b505050565b8280546110da90611647565b90600052602060002090601f0160209004810192826110fc5760008555611143565b82601f1061111557805160ff1916838001178555611143565b82800160010185558215611143579182015b82811115611142578251825591602001919060010190611127565b5b5090506111509190611154565b5090565b5b8082111561116d576000816000905550600101611155565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156111ab578082015181840152602081019050611190565b838111156111ba576000848401525b50505050565b6000601f19601f8301169050919050565b60006111dc82611171565b6111e6818561117c565b93506111f681856020860161118d565b6111ff816111c0565b840191505092915050565b6000602082019050818103600083015261122481846111d1565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126b82611240565b9050919050565b61127b81611260565b811461128657600080fd5b50565b60008135905061129881611272565b92915050565b6000819050919050565b6112b18161129e565b81146112bc57600080fd5b50565b6000813590506112ce816112a8565b92915050565b600080604083850312156112eb576112ea611236565b5b60006112f985828601611289565b925050602061130a858286016112bf565b9150509250929050565b60008115159050919050565b61132981611314565b82525050565b60006020820190506113446000830184611320565b92915050565b6113538161129e565b82525050565b600060208201905061136e600083018461134a565b92915050565b60008060006060848603121561138d5761138c611236565b5b600061139b86828701611289565b93505060206113ac86828701611289565b92505060406113bd868287016112bf565b9150509250925092565b600060ff82169050919050565b6113dd816113c7565b82525050565b60006020820190506113f860008301846113d4565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611440826111c0565b810181811067ffffffffffffffff8211171561145f5761145e611408565b5b80604052505050565b600061147261122c565b905061147e8282611437565b919050565b600067ffffffffffffffff82111561149e5761149d611408565b5b6114a7826111c0565b9050602081019050919050565b82818337600083830152505050565b60006114d66114d184611483565b611468565b9050828152602081018484840111156114f2576114f1611403565b5b6114fd8482856114b4565b509392505050565b600082601f83011261151a576115196113fe565b5b813561152a8482602086016114c3565b91505092915050565b6000806040838503121561154a57611549611236565b5b600083013567ffffffffffffffff8111156115685761156761123b565b5b61157485828601611505565b925050602083013567ffffffffffffffff8111156115955761159461123b565b5b6115a185828601611505565b9150509250929050565b6000602082840312156115c1576115c0611236565b5b60006115cf84828501611289565b91505092915050565b600080604083850312156115ef576115ee611236565b5b60006115fd85828601611289565b925050602061160e85828601611289565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061165f57607f821691505b6020821081141561167357611672611618565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156116ff578086048111156116db576116da611679565b5b60018516156116ea5780820291505b80810290506116f8856116a8565b94506116bf565b94509492505050565b60008261171857600190506117d4565b8161172657600090506117d4565b816001811461173c576002811461174657611775565b60019150506117d4565b60ff84111561175857611757611679565b5b8360020a91508482111561176f5761176e611679565b5b506117d4565b5060208310610133831016604e8410600b84101617156117aa5782820a9050838111156117a5576117a4611679565b5b6117d4565b6117b784848460016116b5565b925090508184048111156117ce576117cd611679565b5b81810290505b9392505050565b60006117e68261129e565b91506117f18361129e565b925061181e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611708565b905092915050565b60006118318261129e565b915061183c8361129e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561187557611874611679565b5b828202905092915050565b600061188b8261129e565b91506118968361129e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118cb576118ca611679565b5b828201905092915050565b6000819050919050565b6000819050919050565b60006119056119006118fb846118d6565b6118e0565b6113c7565b9050919050565b611915816118ea565b82525050565b6000602082019050611930600083018461190c565b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061199260258361117c565b915061199d82611936565b604082019050919050565b600060208201905081810360008301526119c181611985565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611a2460248361117c565b9150611a2f826119c8565b604082019050919050565b60006020820190508181036000830152611a5381611a17565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ab660228361117c565b9150611ac182611a5a565b604082019050919050565b60006020820190508181036000830152611ae581611aa9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611b22601f8361117c565b9150611b2d82611aec565b602082019050919050565b60006020820190508181036000830152611b5181611b15565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611b8e601d8361117c565b9150611b9982611b58565b602082019050919050565b60006020820190508181036000830152611bbd81611b81565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c2060258361117c565b9150611c2b82611bc4565b604082019050919050565b60006020820190508181036000830152611c4f81611c13565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611cb260238361117c565b9150611cbd82611c56565b604082019050919050565b60006020820190508181036000830152611ce181611ca5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611d4460268361117c565b9150611d4f82611ce8565b604082019050919050565b60006020820190508181036000830152611d7381611d37565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611dd6602e8361117c565b9150611de182611d7a565b604082019050919050565b60006020820190508181036000830152611e0581611dc9565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611e68602b8361117c565b9150611e7382611e0c565b604082019050919050565b60006020820190508181036000830152611e9781611e5b565b905091905056fea26469706673582212201d5ea125c30d6033e66c204567eeae28dc66c89e3e4fea500a896edd52150c6964736f6c63430008090033";

export class FaucetToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetToken> {
    return super.deploy(overrides || {}) as Promise<FaucetToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FaucetToken {
    return super.attach(address) as FaucetToken;
  }
  connect(signer: Signer): FaucetToken__factory {
    return super.connect(signer) as FaucetToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetTokenInterface {
    return new utils.Interface(_abi) as FaucetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetToken {
    return new Contract(address, _abi, signerOrProvider) as FaucetToken;
  }
}
