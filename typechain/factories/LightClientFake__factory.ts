/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LightClientFake,
  LightClientFakeInterface,
} from "../LightClientFake";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "receiptsHash",
        type: "bytes32",
      },
    ],
    name: "VerifyReceiptsHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blocksByHeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329e141af1461003b5780633c6c6b731461006b575b600080fd5b61005560048036038101906100509190610279565b61009b565b60405161006291906102d4565b60405180910390f35b61008560048036038101906100809190610325565b610183565b6040516100929190610374565b60405180910390f35b60006100c97f39b7a77b94848a0b4318b11e33a28c8ddc0ad05fea4419025285c0e04cb2134d60001b61023b565b6100f57f68749edaeb2afe2ccac6a644f76d9839014ebdca2986f99c4979785b765481a760001b61023b565b6101217f9365e41989bc636bef08e7a6fed0993d985378ec4c78ba0482237a868105899860001b61023b565b61014d7f5065eedbb76963a282d3bf029ee2e9815b3352c6562261f625af0e417ed1871e60001b61023b565b6101797f68be47529bd6f83e2ca19f024f036e6d9058b13a1e9b3f8f41abb6a5aadd660160001b61023b565b6001905092915050565b60006101b17fad2baab0846de0fb5b525433463bdd41ae7bcdcd8e442c17eecb276f1919a6d560001b61023b565b6101dd7f94737c73e7c051ec43535c2a4218d6ef4ca4a0077cbcea63eba43129120f341b60001b61023b565b6102097faf5c254938324141952382dea890d6ffc9e422b4b51f6c7089c1b9e752b57ddb60001b61023b565b8260405160200161021a9190610374565b6040516020818303038152906040528051906020012060001c905092915050565b50565b600080fd5b6000819050919050565b61025681610243565b811461026157600080fd5b50565b6000813590506102738161024d565b92915050565b600080604083850312156102905761028f61023e565b5b600061029e85828601610264565b92505060206102af85828601610264565b9150509250929050565b60008115159050919050565b6102ce816102b9565b82525050565b60006020820190506102e960008301846102c5565b92915050565b6000819050919050565b610302816102ef565b811461030d57600080fd5b50565b60008135905061031f816102f9565b92915050565b6000806040838503121561033c5761033b61023e565b5b600061034a85828601610310565b925050602061035b85828601610310565b9150509250929050565b61036e816102ef565b82525050565b60006020820190506103896000830184610365565b9291505056fea2646970667358221220bf23f1b5cc46cfa42c783ab8c9eb71a498ab4d6be0cf7f6ad5a6a390e70501e064736f6c63430008090033";

export class LightClientFake__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LightClientFake> {
    return super.deploy(overrides || {}) as Promise<LightClientFake>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LightClientFake {
    return super.attach(address) as LightClientFake;
  }
  connect(signer: Signer): LightClientFake__factory {
    return super.connect(signer) as LightClientFake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LightClientFakeInterface {
    return new utils.Interface(_abi) as LightClientFakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LightClientFake {
    return new Contract(address, _abi, signerOrProvider) as LightClientFake;
  }
}
