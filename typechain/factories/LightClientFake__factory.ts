/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LightClientFake,
  LightClientFakeInterface,
} from "../LightClientFake";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "receiptsHash",
        type: "bytes32",
      },
    ],
    name: "VerifyReceiptsHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blocksByHeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329e141af1461003b5780633c6c6b731461006b575b600080fd5b61005560048036038101906100509190610268565b61009b565b60405161006291906102fe565b60405180910390f35b610085600480360381019061008091906102a4565b610183565b6040516100929190610319565b60405180910390f35b60006100c97f39b7a77b94848a0b4318b11e33a28c8ddc0ad05fea4419025285c0e04cb2134d60001b61023b565b6100f57f68749edaeb2afe2ccac6a644f76d9839014ebdca2986f99c4979785b765481a760001b61023b565b6101217f9365e41989bc636bef08e7a6fed0993d985378ec4c78ba0482237a868105899860001b61023b565b61014d7f5065eedbb76963a282d3bf029ee2e9815b3352c6562261f625af0e417ed1871e60001b61023b565b6101797f68be47529bd6f83e2ca19f024f036e6d9058b13a1e9b3f8f41abb6a5aadd660160001b61023b565b6001905092915050565b60006101b17fad2baab0846de0fb5b525433463bdd41ae7bcdcd8e442c17eecb276f1919a6d560001b61023b565b6101dd7f94737c73e7c051ec43535c2a4218d6ef4ca4a0077cbcea63eba43129120f341b60001b61023b565b6102097faf5c254938324141952382dea890d6ffc9e422b4b51f6c7089c1b9e752b57ddb60001b61023b565b8260405160200161021a9190610319565b6040516020818303038152906040528051906020012060001c905092915050565b50565b60008135905061024d81610354565b92915050565b6000813590506102628161036b565b92915050565b6000806040838503121561027b57600080fd5b60006102898582860161023e565b925050602061029a8582860161023e565b9150509250929050565b600080604083850312156102b757600080fd5b60006102c585828601610253565b92505060206102d685828601610253565b9150509250929050565b6102e981610334565b82525050565b6102f88161034a565b82525050565b600060208201905061031360008301846102e0565b92915050565b600060208201905061032e60008301846102ef565b92915050565b60008115159050919050565b6000819050919050565b6000819050919050565b61035d81610340565b811461036857600080fd5b50565b6103748161034a565b811461037f57600080fd5b5056fea2646970667358221220e41db0209538f96f31940d858851bc2ffd25537f9566d6a689b0a79b475cd8ec64736f6c63430008040033";

export class LightClientFake__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LightClientFake> {
    return super.deploy(overrides || {}) as Promise<LightClientFake>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LightClientFake {
    return super.attach(address) as LightClientFake;
  }
  connect(signer: Signer): LightClientFake__factory {
    return super.connect(signer) as LightClientFake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LightClientFakeInterface {
    return new utils.Interface(_abi) as LightClientFakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LightClientFake {
    return new Contract(address, _abi, signerOrProvider) as LightClientFake;
  }
}
