/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LightClientFake,
  LightClientFakeInterface,
} from "../LightClientFake";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "receiptsHash",
        type: "bytes32",
      },
    ],
    name: "VerifyReceiptsHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blocksByHeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610255806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329e141af1461003b5780633c6c6b731461006b575b600080fd5b61005560048036038101906100509190610105565b61009b565b604051610062919061019b565b60405180910390f35b61008560048036038101906100809190610141565b6100a7565b60405161009291906101b6565b60405180910390f35b60006001905092915050565b6000826040516020016100ba91906101b6565b6040516020818303038152906040528051906020012060001c905092915050565b6000813590506100ea816101f1565b92915050565b6000813590506100ff81610208565b92915050565b6000806040838503121561011857600080fd5b6000610126858286016100db565b9250506020610137858286016100db565b9150509250929050565b6000806040838503121561015457600080fd5b6000610162858286016100f0565b9250506020610173858286016100f0565b9150509250929050565b610186816101d1565b82525050565b610195816101e7565b82525050565b60006020820190506101b0600083018461017d565b92915050565b60006020820190506101cb600083018461018c565b92915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6101fa816101dd565b811461020557600080fd5b50565b610211816101e7565b811461021c57600080fd5b5056fea26469706673582212206524688b699add964ad5e272a4e76bf96a58084ed4ea1a8ab4682f5e8c9bc52164736f6c63430008040033";

export class LightClientFake__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LightClientFake> {
    return super.deploy(overrides || {}) as Promise<LightClientFake>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LightClientFake {
    return super.attach(address) as LightClientFake;
  }
  connect(signer: Signer): LightClientFake__factory {
    return super.connect(signer) as LightClientFake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LightClientFakeInterface {
    return new utils.Interface(_abi) as LightClientFakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LightClientFake {
    return new Contract(address, _abi, signerOrProvider) as LightClientFake;
  }
}
